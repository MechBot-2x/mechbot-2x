{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"DOCUMENTATION_INDEX/","title":"DOCUMENTATION INDEX","text":"<p>Here's the comprehensive technical documentation for MechBot 2.0x with precise file locations and implementation commands:</p>"},{"location":"DOCUMENTATION_INDEX/#mechbot-20x-technical-documentation-index","title":"MechBot 2.0x Technical Documentation Index","text":"<p><code>DOCUMENTATION_INDEX.md</code> | Location: <code>/docs/DOCUMENTATION_INDEX.md</code></p>"},{"location":"DOCUMENTATION_INDEX/#1-core-architecture","title":"1. Core Architecture","text":"<p>\ud83d\udcc4 <code>architecture/4D_ARCHITECTURE.md</code> <pre><code>flowchart TD\n    A[Vehicle] --&gt;|CAN FD 2.0B| B[Edge Node]\n    B --&gt;|gRPC-stream| C[Cloud Core]\n    C --&gt; D{Microservices}\n    D --&gt; E[AI Diagnosis]\n    D --&gt; F[3D Parts API]\n</code></pre></p> <p>Implementation Command: <pre><code># Generate architecture diagrams\nmake arch-diagram \\\n  --input=architecture/specs/ \\\n  --format=mermaid\n</code></pre></p>"},{"location":"DOCUMENTATION_INDEX/#2-aiml-implementation","title":"2. AI/ML Implementation","text":"<p>\ud83d\udcc4 <code>docs/ai/DIAGNOSIS_MODELS.md</code> <pre><code># Model conversion to ONNX (scripts/convert_model.py)\npython convert_model.py \\\n  --input=model/xgboost_v2.h5 \\\n  --output=onnx/xgboost_v2.onnx \\\n  --quantize\n</code></pre></p> <p>\ud83d\udcc4 <code>docs/ai/NLP_CHATBOT.md</code> <pre><code># Deploy BERT model\nkubectl apply -f deploy/ai/nlp-deployment.yaml\n</code></pre></p>"},{"location":"DOCUMENTATION_INDEX/#3-security-protocols","title":"3. Security Protocols","text":"<p>\ud83d\udcc4 <code>security/SECURITY_POLICY.md</code> <pre><code># Vault configuration (security/vault/config.hcl)\nstorage \"raft\" {\n  path = \"/vault/data\"\n  node_id = \"mechbot_vault_1\"\n}\n\nlistener \"tcp\" {\n  tls_cert_file = \"/etc/certs/vault.crt\"\n  tls_key_file = \"/etc/certs/vault.key\"\n}\n</code></pre></p> <p>Implementation Command: <pre><code># Initialize Vault\nvault operator init -key-shares=5 -key-threshold=3\n</code></pre></p>"},{"location":"DOCUMENTATION_INDEX/#4-api-documentation","title":"4. API Documentation","text":"<p>\ud83d\udcc4 <code>docs/api/REST_API.md</code> <pre><code>## Vehicle Telemetry API\n`POST /api/v2/telemetry`\n```json\nRequest:\n{\n  \"vin\": \"1HGCM82633A123456\",\n  \"params\": {\n    \"rpm\": 3200,\n    \"temp\": 92\n  }\n}\n</code></pre> <pre><code>\ud83d\udcc4 `docs/api/GRPC_PROTOCOLS.md`\n```protobuf\n// proto/diagnosis/v1/service.proto\nservice DiagnosisService {\n  rpc Analyze (DiagnosisRequest) returns (DiagnosisResponse) {\n    option (google.api.http) = {\n      post: \"/v1/diagnosis\"\n      body: \"*\"\n    };\n  }\n}\n</code></pre></p>"},{"location":"DOCUMENTATION_INDEX/#5-testing-framework","title":"5. Testing Framework","text":"<p>\ud83d\udcc4 <code>test/STRESS_TEST_PROTOCOL.md</code> <pre><code># Run CAN bus stress test\npython test/can_stress.py \\\n  --duration=1h \\\n  --msg-rate=5000/s \\\n  --bus=can0\n</code></pre></p> <p>\ud83d\udcc4 <code>test/LOAD_TESTING.md</code> <pre><code># Execute API load test\nk6 run test/k6/telemetry_test.js \\\n  --vus 100 \\\n  --duration 30m\n</code></pre></p>"},{"location":"DOCUMENTATION_INDEX/#6-deployment-guides","title":"6. Deployment Guides","text":"<p>\ud83d\udcc4 <code>deploy/KUBERNETES_SETUP.md</code> <pre><code># Cluster initialization\neksctl create cluster \\\n  --name mechbot-prod \\\n  --nodes 3 \\\n  --node-type m6i.2xlarge \\\n  --region us-west-2\n</code></pre></p> <p>\ud83d\udcc4 <code>deploy/EDGE_DEVICES.md</code> <pre><code># Flash Raspberry Pi image\nsudo dd if=mechbot-edge-v2.1.img \\\n  of=/dev/mmcblk0 \\\n  bs=4M status=progress\n</code></pre></p>"},{"location":"DOCUMENTATION_INDEX/#7-monitoring-stack","title":"7. Monitoring Stack","text":"<p>\ud83d\udcc4 <code>monitoring/PROMETHEUS_SETUP.md</code> <pre><code># prometheus.yml\nscrape_configs:\n  - job_name: 'vehicle_metrics'\n    scrape_interval: 5s\n    static_configs:\n      - targets: ['can-exporter:9100']\n</code></pre></p> <p>\ud83d\udcc4 <code>monitoring/GRAFANA_DASHBOARDS.md</code> <pre><code># Import dashboard\ncurl -X POST \\\n  -H \"Authorization: Bearer ${API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  -d @monitoring/grafana/vehicle-dashboard.json \\\n  http://grafana:3000/api/dashboards/db\n</code></pre></p>"},{"location":"DOCUMENTATION_INDEX/#8-development-standards","title":"8. Development Standards","text":"<p>\ud83d\udcc4 <code>docs/engineering/CODE_STYLE.md</code> <pre><code>## Python Style Guide\n- Black formatting (line-length=100)\n- Google-style docstrings\n- Type hints mandatory for public APIs\n</code></pre></p> <p>\ud83d\udcc4 <code>docs/engineering/REVIEW_GUIDELINES.md</code> <pre><code># .github/pull_request_template.md\n## Changes Made\n- [ ] Documentation updated\n- [ ] Tests added\n- [ ] Backward compatibility verified\n</code></pre></p>"},{"location":"DOCUMENTATION_INDEX/#9-command-quick-reference","title":"9. Command Quick Reference","text":"<pre><code># Build system targets\nmake help\nAvailable targets:\n  build-firmware    Build edge device firmware\n  test-all          Run all test suites\n  deploy-staging    Deploy to staging cluster\n</code></pre>"},{"location":"DOCUMENTATION_INDEX/#10-related-documents","title":"10. Related Documents","text":"<p>\ud83d\udccc Data Retention Policy \ud83d\udccc Incident Response Playbook \ud83d\udccc Hardware Specifications</p> <p>Engineering Team Contacts \ud83d\udee0\ufe0f 24/7 Support: engineering-support@mechbot.tech \ud83c\udf10 Internal Wiki: engineering.mechbot.tech </p> <p>This documentation index provides: 1. Precise file locations for all technical documents 2. Ready-to-run implementation commands 3. Code snippets for critical configurations 4. Cross-references to related materials 5. Direct access points for engineering support</p> <p>Each document follows the standard template: <pre><code>## Purpose\n## Technical Specifications\n## Implementation Guide\n## Troubleshooting\n## Related Documents\n</code></pre></p> <p>Would you like me to generate any specific document in full or adjust the format for particular use cases?</p>"},{"location":"STRUCTURE/","title":"Estructura del Proyecto MechBot 2.0x","text":"<p>Arquitectura: CI/CD + Multi-Cloud (AWS/GCP)  </p> <p>[](https://github.com/.../actions</p>"},{"location":"STRUCTURE/#estructura-del-proyecto-mechbot-20x_1","title":"Estructura del Proyecto MechBot 2.0x","text":"<p>Arquitectura: CI/CD + Multi-Cloud (AWS/GCP)  </p> <p></p> <p>```markdown . \u251c\u2500\u2500 \ud83d\udcc1 backend \u2502   \u251c\u2500\u2500 \ud83d\udcc1 auth                  # Autenticaci\u00f3n JWT Zero-Trust \u2502   \u2502   \u251c\u2500\u2500 jwt_manager.py       # Rotaci\u00f3n HS512/Kyber \u2502   \u2502   \u2514\u2500\u2500 oauth_schemas.py     # Modelos Pydantic \u2502   \u2502 \u2502   \u251c\u2500\u2500 \ud83d\udcc1 diagnosis             # N\u00facleo de IA \u2502   \u2502   \u251c\u2500\u2500 ml_models/           # XGBoost + BERT (ONNX) \u2502   \u2502   \u251c\u2500\u2500 realtime_processing  # Spark Streaming \u2502   \u2502   \u2514\u2500\u2500 fault_codes.db       # Base de conocimiento SAE J2012 \u2502   \u2502 \u2502   \u2514\u2500\u2500 \ud83d\udcc1 workshop-integration  # gRPC + Protobuf \u2502       \u251c\u2500\u2500 protos/              # Definiciones .proto \u2502       \u2514\u2500\u2500 salesforce_adapter   # Conexi\u00f3n CRM \u2502 \u251c\u2500\u2500 \ud83d\udcc1 frontend \u2502   \u251c\u2500\u2500 \ud83d\udcc1 public                # Assets 3D (GLTF) \u2502   \u2502   \u2514\u2500\u2500 models/              # Veh\u00edculos optimizados \u2502   \u2502 \u2502   \u251c\u2500\u2500 \ud83d\udcc1 src \u2502   \u2502   \u251c\u2500\u2500 hooks/               # Custom React Hooks \u2502   \u2502   \u2502   \u2514\u2500\u2500 useTelemetry.js  # WebSocket + Three.js \u2502   \u2502   \u2502 \u2502   \u2502   \u2514\u2500\u2500 components/AR        # Componentes RA \u2502   \u2502       \u251c\u2500\u2500 EngineViewer.js  # Canvas WebGL \u2502   \u2502       \u2514\u2500\u2500 FaultOverlay.js  # Anotaciones 3D \u2502   \u2502 \u2502   \u2514\u2500\u2500 next.config.js           # SSR + ISR \u2502 \u251c\u2500\u2500 \ud83d\udcc1 infrastructure \u2502   \u251c\u2500\u2500 \ud83d\udcc1 k8s                   # Helm Charts \u2502   \u2502   \u251c\u2500\u2500 values-prod.yaml     # HPA Config \u2502   \u2502   \u2514\u2500\u2500 istio-gateway.yaml   # Traffic Management \u2502   \u2502 \u2502   \u251c\u2500\u2500 \ud83d\udcc1 terraform             # IaC \u2502   \u2502   \u251c\u2500\u2500 modules/eks          # Cluster AWS \u2502   \u2502   \u2514\u2500\u2500 monitoring           # Prometheus + Grafana \u2502   \u2502 \u2502   \u2514\u2500\u2500 docker-compose.yml       # Dev Environment \u2502 \u251c\u2500\u2500 \ud83d\udcc1 docs \u2502   \u251c\u2500\u2500 API_REFERENCE.md         # OpenAPI 3.0 \u2502   \u251c\u2500\u2500 ARCHITECTURE.md          # Diagramas C4 \u2502   \u2514\u2500\u2500 ONBOARDING.md            # Gu\u00edas Kubernetes \u2502 \u251c\u2500\u2500 \ud83d\udcc1 tests \u2502   \u251c\u2500\u2500 e2e/                     # Playwright \u2502   \u251c\u2500\u2500 integration/             # pytest-gRPC \u2502   \u2514\u2500\u2500 unit/                    # 90%+ Coverage \u2502 \u251c\u2500\u2500 \ud83d\udcc1 scripts \u2502   \u251c\u2500\u2500 data-pipeline/           # Glue ETL \u2502   \u2514\u2500\u2500 security/               # CIS Benchmarks \u2502 \u251c\u2500\u2500 .env.sample                  # Plantilla variables \u251c\u2500\u2500 Makefile                     # Automatizaci\u00f3n \u2514\u2500\u2500 pyproject.toml               # Dependencias Python</p>"},{"location":"STRUCTURE/#explicacion-de-directorios-clave","title":"\ud83d\udd0d Explicaci\u00f3n de Directorios Clave","text":"<ol> <li>Backend </li> <li><code>auth/</code>: Implementa autenticaci\u00f3n JWT con doble clave (HS512 + Kyber para PQC)  </li> <li><code>diagnosis/ml_models/</code>: Contiene modelos ONNX optimizados para inferencia en &lt;50ms  </li> <li> <p><code>workshop-integration/</code>: Genera c\u00f3digo gRPC autom\u00e1tico v\u00eda <code>prototool</code></p> </li> <li> <p>Frontend </p> </li> <li><code>public/models/</code>: Modelos GLTF comprimidos con Draco (70% reducci\u00f3n)  </li> <li><code>hooks/useTelemetry.js</code>: Maneja 10K mensajes/segundo via WebSocket  </li> <li> <p><code>next.config.js</code>: Configura ISR para gu\u00edas de reparaci\u00f3n</p> </li> <li> <p>Infraestructura </p> </li> <li><code>k8s/</code>: Helm charts con HPA basado en m\u00e9tricas custom (<code>diagnosis_queue_length &gt; 100</code>)  </li> <li><code>terraform/modules/eks</code>: Implementa nodos Spot con tolerancia a fallos  </li> <li> <p><code>monitoring/</code>: Configura AlertManager para notificaciones en Slack</p> </li> <li> <p>Tests </p> </li> <li><code>e2e/</code>: Pruebas con Playwright (Chromium en Docker)  </li> <li><code>integration/</code>: Mock de servicios externos con <code>wiremock</code> </li> <li><code>unit/</code>: Incluye fuzzing para APIs con <code>hypothesis</code></li> </ol>"},{"location":"STRUCTURE/#workflow-de-desarrollo","title":"\ud83d\udee0\ufe0f Workflow de Desarrollo","text":"<p>mermaid graph LR     A[GitHub Issue] --&gt; B[Branch sem\u00e1ntico]     B --&gt; C[Pre-commit: lint+security]     C --&gt; D[CI: build+test]     D --&gt;|Aprobado| E[Deploy Dev]     E --&gt; F[QA Automation]     F --&gt;|\u2705| G[Promote to Prod]</p>"},{"location":"STRUCTURE/#metricas-de-calidad","title":"\ud83d\udcca M\u00e9tricas de Calidad","text":"\u00c1rea Herramienta Objetivo C\u00f3digo SonarQube &lt;5% debt Seguridad Trivy 0 CVE cr\u00edticas Rendimiento k6 p95 &lt;2s Documentaci\u00f3n Vale 100% coverage <p>Equipo T\u00e9cnico MechBot 2.0x Actualizado: 2025-04-02 \ud83d\udccc \u00bfNecesitas personalizar alguna secci\u00f3n? Abre un issue en nuestro GitHub.</p>"},{"location":"Arquitectura%204D/flowchart%20TD/","title":"Resumen T\u00e9cnico Unificado - MechBot 2.0x","text":"<p>Estado: Producci\u00f3n | Versi\u00f3n: 2.1.0 | \u00daltima Actualizaci\u00f3n: 2025-04-30  </p>"},{"location":"Arquitectura%204D/flowchart%20TD/#arquitectura-4d","title":"Arquitectura 4D","text":"<pre><code>flowchart TD\n    F\u00cdSICA[\"\ud83d\udee0\ufe0f Capa F\u00edsica\\n- Kubernetes/NVIDIA/RPi\\n- CAN Bus 2.0B\"] --&gt; PLATAFORMA[\"\ud83d\udc33 Capa Plataforma\\n- Docker/Helm/Istio\"]\n    PLATAFORMA --&gt; SERVICIOS[\"\ud83d\udd0c Capa Servicios\\n- gRPC-stream/Kafka\"] \n    SERVICIOS --&gt; APLICACI\u00d3N[\"\ud83d\udcca Capa Aplicaci\u00f3n\\n- Dashboard 3D/Telemetr\u00eda\"]\n</code></pre>"},{"location":"Arquitectura%204D/flowchart%20TD/#componentes-clave","title":"Componentes Clave","text":"<ul> <li>Protocolo CAN: Configuraci\u00f3n en <code>config/canbus/can0.conf</code> (1Mbps bitrate)</li> <li>Serializaci\u00f3n: Protobuf v3 + Avro Schema</li> <li>Monitorizaci\u00f3n: Prometheus + Grafana 10 (5s scrape interval)</li> </ul>"},{"location":"Arquitectura%204D/flowchart%20TD/#configuraciones-criticas","title":"Configuraciones Cr\u00edticas","text":""},{"location":"Arquitectura%204D/flowchart%20TD/#1-dependabot-automatizado-githubdependabotyml","title":"1. Dependabot Automatizado (<code>.github/dependabot.yml</code>)","text":"<pre><code>updates:\n  - package-ecosystem: \"npm\"\n    schedule: \n      interval: \"weekly\"\n      time: \"08:00\"  # GMT-4\n    reviewers: [\"@mechmind-dwv/team-core\"]\n</code></pre>"},{"location":"Arquitectura%204D/flowchart%20TD/#2-monitorizacion-prometheus","title":"2. Monitorizaci\u00f3n (Prometheus)","text":"<p>M\u00e9tricas Clave: <pre><code># Consulta de latencia CAN Bus\ncurl http://prometheus:9090/api/v1/query?query=canbus_latency_seconds\n</code></pre></p> <p>Alertas: <pre><code>- alert: HighCANBusLatency\n  expr: rate(canbus_latency_seconds[1m]) &gt; 0.5\n  labels: severity: 'critical'\n</code></pre></p>"},{"location":"Arquitectura%204D/flowchart%20TD/#3-protocolo-comunicacion","title":"3. Protocolo Comunicaci\u00f3n","text":"<p>Estructura Protobuf: <pre><code>message VehicleSignal {\n    uint64 timestamp = 1;\n    oneof value {\n        double numeric = 2;\n        bytes raw = 3;\n    }\n}\n</code></pre></p>"},{"location":"Arquitectura%204D/flowchart%20TD/#flujo-de-datos","title":"Flujo de Datos","text":"<pre><code>sequenceDiagram\n    Vehicle-&gt;&gt;Platform: Se\u00f1ales CAN (RAW)\n    Platform-&gt;&gt;Services: gRPC-stream (Protobuf)\n    Services-&gt;&gt;App: WebSocket (LZ4)\n    App-&gt;&gt;Vehicle: Comandos (ACK CAN)\n</code></pre>"},{"location":"Arquitectura%204D/flowchart%20TD/#seguridad","title":"Seguridad","text":"<p>Pol\u00edticas: - \ud83d\udd12 Rotaci\u00f3n mensual de secretos con Vault - \ud83d\udd0d Auditor\u00eda SIEM integrada - \ud83d\udea8 SLA 24h para vulnerabilidades cr\u00edticas</p> <p>Ejemplo Secreto Seguro: <pre><code># Uso correcto en JWT\nos.environ['JWT_SECRET'] = \"56a0dfe2...6552ce\"  # 512-bit\n</code></pre></p>"},{"location":"Arquitectura%204D/flowchart%20TD/#roadmap-q2-2025","title":"Roadmap Q2-2025","text":"<ol> <li>Zero-trust en capa f\u00edsica</li> <li>Migraci\u00f3n a Kafka Streams v3.5</li> <li>Dashboard unificado Grafana 10</li> </ol>"},{"location":"Arquitectura%204D/flowchart%20TD/#equipo","title":"Equipo","text":"\u00c1rea Responsables Contacto DevOps @devops-lead infra@mechbot.tech Seguridad @alice-security-engineer security-emergency@mechbot.tech Observabilidad @observability-eng metrics-support@mechbot.tech <p>Repositorios: - \ud83c\udfd7\ufe0f Principal: github.com/mechmind-dwv/mechbot-2x - \ud83d\udcc4 Protocolos: github.com/mechmind-dwv/protocols</p> <p>Este resumen integra toda la documentaci\u00f3n t\u00e9cnica en un formato cohesivo, destacando: - Arquitectura 4D con diagramas Mermaid - Configuraciones t\u00e9cnicas clave (YAML/Protobuf) - Flujos de trabajo y seguridad - Estructura de equipo y roadmap</p>"},{"location":"T%C3%A9cnica/Sistem.%20Diagnostic_tiempo_real/","title":"C\u00f3digo Fuente - Equipo T\u00e9cnico MechBot 2.0x","text":"<p>\"Precisi\u00f3n t\u00e9cnica, innovaci\u00f3n responsable\" </p> <pre><code># --------------------------------------------\n# M\u00d3DULO PRINCIPAL: SISTEMA DE DIAGN\u00d3STICO EN TIEMPO REAL\n# --------------------------------------------\nimport jwt\nfrom datetime import datetime, timedelta\nfrom fastapi import FastAPI, HTTPException, Depends\nfrom fastapi.security import OAuth2PasswordBearer\nfrom pydantic import BaseModel\nimport os\nfrom dotenv import load_dotenv\n\n# Configuraci\u00f3n de entorno\nload_dotenv()\napp = FastAPI(title=\"MechBot 2.0x API\", version=\"2.0.1\")\n\n# --------------------------------------------\n# MODELOS DE DATOS (Pydantic)\n# --------------------------------------------\nclass VehicleData(BaseModel):\n    vin: str\n    obd2_codes: list[str]\n    telemetry: dict\n\nclass DiagnosisResult(BaseModel):\n    fault_code: str\n    severity: int  # 1-5 (5=m\u00e1s cr\u00edtico)\n    recommended_actions: list[str]\n    ar_guide_url: str  # Enlace a gu\u00eda AR\n\n# --------------------------------------------\n# AUTENTICACI\u00d3N JWT (Zero-Trust)\n# --------------------------------------------\nJWT_SECRET = os.getenv(\"JWT_SECRET_HS512\")  # Clave HS512 de 64 bytes\nALGORITHM = \"HS512\"\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"token\")\n\ndef create_access_token(data: dict, expires_delta: timedelta = None):\n    to_encode = data.copy()\n    expire = datetime.utcnow() + (expires_delta or timedelta(minutes=15))\n    to_encode.update({\"exp\": expire})\n    return jwt.encode(to_encode, JWT_SECRET, algorithm=ALGORITHM)\n\nasync def verify_token(token: str = Depends(oauth2_scheme)):\n    try:\n        payload = jwt.decode(token, JWT_SECRET, algorithms=[ALGORITHM])\n        return payload\n    except jwt.PyJWTError:\n        raise HTTPException(status_code=403, detail=\"Token inv\u00e1lido\")\n\n# --------------------------------------------\n# ENDPOINTS PRINCIPALES\n# --------------------------------------------\n@app.post(\"/diagnose\", response_model=DiagnosisResult)\nasync def diagnose_vehicle(\n    vehicle: VehicleData, \n    token: dict = Depends(verify_token)\n):\n    \"\"\"\n    Procesa datos OBD-II y devuelve diagn\u00f3stico con gu\u00eda AR.\n    Ejemplo de entrada:\n    {\n        \"vin\": \"1HGCM82633A123456\",\n        \"obd2_codes\": [\"P0300\", \"P0172\"],\n        \"telemetry\": {\"rpm\": 3200, \"temp\": 92}\n    }\n    \"\"\"\n    # L\u00f3gica de IA (simplificada)\n    critical_codes = {\"P0300\", \"P0172\", \"P0420\"}\n    severity = 4 if any(code in critical_codes for code in vehicle.obd2_codes) else 2\n\n    return DiagnosisResult(\n        fault_code=\";\".join(vehicle.obd2_codes),\n        severity=severity,\n        recommended_actions=[\n            \"Verificar buj\u00edas y cables\",\n            \"Limpiar inyectores\"\n        ],\n        ar_guide_url=f\"https://ar.mechbot.io/guide/{vehicle.vin}\"\n    )\n\n# --------------------------------------------\n# MICROSERVICIO DE TELEMETR\u00cdA (Kafka Consumer)\n# --------------------------------------------\nfrom confluent_kafka import Consumer\n\ndef start_telemetry_consumer():\n    conf = {\n        'bootstrap.servers': os.getenv(\"KAFKA_BROKERS\"),\n        'group.id': 'mechbot-telemetry',\n        'auto.offset.reset': 'earliest'\n    }\n    consumer = Consumer(conf)\n    consumer.subscribe([\"vehicle-telemetry\"])\n\n    while True:\n        msg = consumer.poll(1.0)\n        if msg is None:\n            continue\n        if msg.error():\n            print(f\"Error: {msg.error()}\")\n            continue\n\n        # Procesamiento en tiempo real\n        process_telemetry(msg.value())\n\n# --------------------------------------------\n# EJECUCI\u00d3N\n# --------------------------------------------\nif __name__ == \"__main__\":\n    import uvicorn\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000)\n</code></pre> <pre><code>// --------------------------------------------\n// FRONTEND: VISUALIZADOR 3D DE COMPONENTES (React-Three-Fiber)\n// --------------------------------------------\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { OrbitControls, Text3D } from '@react-three/drei'\nimport { useVehicleDiagnosis } from './hooks'\n\nconst EngineModel = ({ faultCode }) =&gt; {\n  const { colorMap } = useVehicleDiagnosis(faultCode)\n\n  return (\n    &lt;Canvas camera={{ position: [0, 0, 5], fov: 50 }}&gt;\n      &lt;ambientLight intensity={0.5} /&gt;\n      &lt;group rotation={[0.1, 0.3, 0]}&gt;\n        {/* Bloque motor */}\n        &lt;mesh&gt;\n          &lt;boxGeometry args={[3, 2, 2.5]} /&gt;\n          &lt;meshStandardMaterial \n            color={colorMap.engine} \n            metalness={0.8}\n            roughness={0.2}\n          /&gt;\n        &lt;/mesh&gt;\n\n        {/* Componente defectuoso (ej: buj\u00eda) */}\n        {faultCode === 'P0300' &amp;&amp; (\n          &lt;mesh position={[1.2, 0.5, 0]}&gt;\n            &lt;sphereGeometry args={[0.3, 16, 16]} /&gt;\n            &lt;meshStandardMaterial color=\"red\" emissive=\"red\" /&gt;\n          &lt;/mesh&gt;\n        )}\n      &lt;/group&gt;\n      &lt;OrbitControls /&gt;\n      &lt;Text3D position={[0, -2, 0]} font=\"/fonts/helvetiker.json\"&gt;\n        {`C\u00f3digo: ${faultCode}`}\n        &lt;meshStandardMaterial color=\"white\" /&gt;\n      &lt;/Text3D&gt;\n    &lt;/Canvas&gt;\n  )\n}\n</code></pre> <pre><code>// --------------------------------------------\n// PROTOCOLO gRPC PARA COMUNICACI\u00d3N CON TALLERES\n// --------------------------------------------\nsyntax = \"proto3\";\n\nservice WorkshopService {\n  rpc ScheduleRepair (RepairRequest) returns (RepairResponse);\n  rpc StreamTelemetry (stream TelemetryData) returns (Ack);\n}\n\nmessage RepairRequest {\n  string vin = 1;\n  repeated string fault_codes = 2;\n  string workshop_id = 3;\n}\n\nmessage TelemetryData {\n  map&lt;string, float&gt; sensors = 1;  // Ej: {\"rpm\": 3200, \"temp\": 85}\n}\n\nmessage RepairResponse {\n  string appointment_id = 1;\n  int64 estimated_cost = 2;  // En c\u00e9ntimos\n}\n</code></pre> <pre><code># --------------------------------------------\n# SCRIPT DE DESPLIEGUE EN KUBERNETES (GitLab CI)\n# --------------------------------------------\ndeploy-prod:\n  stage: deploy\n  image: alpine/k8s:1.25.0\n  script:\n    - echo \"$KUBE_CONFIG\" &gt; kubeconfig.yaml\n    - kubectl apply -f k8s/\n      --kubeconfig=kubeconfig.yaml\n      --namespace=mechbot-prod\n  only:\n    - main\n  variables:\n    KUBE_CONFIG: $KUBERNETES_CONFIG_PROD\n</code></pre>"},{"location":"T%C3%A9cnica/Sistem.%20Diagnostic_tiempo_real/#especificaciones-tecnicas-clave","title":"Especificaciones T\u00e9cnicas Clave","text":"<ol> <li>Autenticaci\u00f3n:  </li> <li>JWT con HS512 (clave de 64 bytes)  </li> <li> <p>Rotaci\u00f3n autom\u00e1tica de claves cada 24h  </p> </li> <li> <p>Procesamiento en Tiempo Real:  </p> </li> <li>Kafka para telemetr\u00eda vehicular (10,000 msg/seg)  </li> <li> <p>Spark Streaming para agregaciones  </p> </li> <li> <p>Visualizaci\u00f3n 3D:  </p> </li> <li>Three.js + WebGL 2.0  </li> <li> <p>Modelos optimizados para m\u00f3vil (&lt;5MB)  </p> </li> <li> <p>Protocolos:  </p> </li> <li>gRPC para comunicaci\u00f3n talleres (latencia &lt;50ms)  </li> <li>HTTP/3 para frontend  </li> </ol> <p>Equipo T\u00e9cnico MechBot 2.0x Documentaci\u00f3n completa disponible en docs.mechbot.io/v2 </p> <p>\u00bfNecesitas detalles adicionales de alg\u00fan m\u00f3dulo? \u00a1Estamos para apoyarte! \ud83d\ude80</p>"},{"location":"ai/DIAGNOSIS_MODELS/","title":"Modelos","text":"<pre><code># Model conversion to ONNX (scripts/convert_model.py)\npython convert_model.py \\\n  --input=model/xgboost_v2.h5 \\\n  --output=onnx/xgboost_v2.onnx \\\n  --quantize\n</code></pre>"},{"location":"ai/NLP_CHATBOT/","title":"Chatbot","text":"<p>docs/ai/NLP_CHATBOT.md` ```bash</p>"},{"location":"ai/NLP_CHATBOT/#deploy-bert-model","title":"Deploy BERT model","text":"<p>kubectl apply -f deploy/ai/nlp-deployment.yaml</p>"},{"location":"anexos/AnexoA_Especificaciones_MechBot2.0x/","title":"AnexoA Especificaciones MechBot2.0x","text":"<p>(Due to technical issues, the search service is temporarily unavailable.)</p>"},{"location":"anexos/AnexoA_Especificaciones_MechBot2.0x/#anexo-a-especificaciones-tecnicas-y-protocolos-de-integracion-de-mechbot-20x","title":"Anexo A: Especificaciones T\u00e9cnicas y Protocolos de Integraci\u00f3n de MechBot 2.0x","text":"<p>Documentaci\u00f3n T\u00e9cnica Complementaria </p>"},{"location":"anexos/AnexoA_Especificaciones_MechBot2.0x/#a1-arquitectura-tecnica-detallada","title":"A.1. Arquitectura T\u00e9cnica Detallada","text":"<p>Diagrama de Componentes Principales 1. Frontend:    - Tecnolog\u00edas: React.js + TypeScript, WebAssembly para renderizado 3D de componentes vehiculares.    - Accesibilidad: Cumplimiento WCAG 2.1 AA (contraste 4.5:1, soporte para lectores de pantalla).    - Dispositivos Compatibles:      - M\u00f3viles: Android 9+, iOS 14+.      - Escritorio: Windows 10+, macOS Monterey+, Linux (Ubuntu 22.04 LTS).  </p> <ol> <li>Backend:  </li> <li>Microservicios:  <ul> <li>Diagn\u00f3stico en Tiempo Real: Node.js + Python (FastAPI), colas RabbitMQ para procesamiento as\u00edncrono.  </li> <li>Gesti\u00f3n de Talleres: Java (Spring Boot), integraci\u00f3n con Salesforce para CRM.  </li> </ul> </li> <li> <p>Escalabilidad: Kubernetes para orquestaci\u00f3n, autoescalado basado en carga (m\u00e1ximo 10,000 solicitudes/segundo).  </p> </li> <li> <p>Base de Datos:  </p> </li> <li>Motor Principal: PostgreSQL 14 (tablas particionadas por regi\u00f3n geogr\u00e1fica).  </li> <li>Big Data: Apache Cassandra para telemetr\u00eda en tiempo real (almacenamiento de &gt;1 PB de datos de sensores).  </li> <li> <p>Cache: Redis Cluster (latencia &lt;2 ms para consultas frecuentes).  </p> </li> <li> <p>IA/ML:  </p> </li> <li>Modelos de Diagn\u00f3stico:  <ul> <li>Algoritmos: Gradient Boosting (XGBoost) + Redes Neuronales Convolucionales (CNNs) para an\u00e1lisis de im\u00e1genes.  </li> <li>Dataset de Entrenamiento: 2.5 millones de registros OBD-II + 500,000 informes de reparaci\u00f3n etiquetados.  </li> <li>Precisi\u00f3n: 94.3% (F1-score) en identificaci\u00f3n de fallas cr\u00edticas.  </li> </ul> </li> <li>NLP para Chatbot:  <ul> <li>Modelo Base: BERT multiling\u00fce (12 idiomas, fine-tuning con 100,000 di\u00e1logos automotrices).  </li> <li>Tasa de Resoluci\u00f3n Aut\u00f3noma: 82% de consultas resueltas sin intervenci\u00f3n humana.  </li> </ul> </li> </ol>"},{"location":"anexos/AnexoA_Especificaciones_MechBot2.0x/#a2-protocolos-de-seguridad-y-cumplimiento","title":"A.2. Protocolos de Seguridad y Cumplimiento","text":"<p>Cifrado y Protecci\u00f3n de Datos: - En Tr\u00e1nsito: TLS 1.3 con cifrado AES-256-GCM. - En Reposo: Cifrado AES-512 + tokenizaci\u00f3n de datos sensibles (ej: VIN, ubicaciones GPS). - Certificaciones:   - ISO/IEC 27001 (Gesti\u00f3n de Seguridad de la Informaci\u00f3n).   - SOC 2 Tipo II (disponibilidad, integridad, confidencialidad).  </p> <p>Autenticaci\u00f3n y Autorizaci\u00f3n: - OAuth 2.0 + OpenID Connect: Integraci\u00f3n con proveedores (Google, Apple ID, cuentas empresariales). - RBAC (Role-Based Access Control):   - Niveles de Acceso:     - Usuario B\u00e1sico: Solo diagn\u00f3stico y tutoriales.     - Taller Certificado: Acceso a historiales completos + API de reservas.     - Administrador Regional: Dashboard anal\u00edtico + gesti\u00f3n de talleres.  </p> <p>Cumplimiento Legal: - GDPR: Borrado de datos bajo solicitud (\"derecho al olvido\"), DPO (Data Protection Officer) designado. - CCPA (California): Opt-out de venta de datos, informe anual de transparencia. - Normativa Automotriz: Compatibilidad con SAE J2534-1 (reprogramaci\u00f3n ECU), ISO 14229-1 (UDS).  </p>"},{"location":"anexos/AnexoA_Especificaciones_MechBot2.0x/#a3-integracion-con-sistemas-externos","title":"A.3. Integraci\u00f3n con Sistemas Externos","text":"<p>APIs P\u00fablicas (RESTful): 1. MechBot Diagnostics API:    - Endpoints Clave:      - <code>POST /diagnosis</code>: Env\u00edo de s\u00edntomas en texto natural \u2192 JSON con posibles fallas (c\u00f3digos DTC incluidos).      - <code>GET /repair-costs</code>: Estimaci\u00f3n de costos basada en geolocalizaci\u00f3n y marca del veh\u00edculo.    - Limitaciones: 100 llamadas/hora por API key (ampliables para talleres premium).  </p> <ol> <li>Vehicle Telemetry API:  </li> <li>Formato de Datos: <pre><code>{  \n  \"timestamp\": \"2024-05-20T14:23:45Z\",  \n  \"vin\": \"1HGCM82633A123456\",  \n  \"obd2_params\": {  \n    \"engine_temp\": 92, // \u00b0C  \n    \"fuel_pressure\": 3.4 // kPa  \n  }  \n}  \n</code></pre></li> <li>Webhooks: Notificaciones en tiempo real para c\u00f3digos cr\u00edticos (ej: P0300 - Fallo de encendido).  </li> </ol> <p>Conectores para Talleres: - Sistema de Gesti\u00f3n de Talleres (WMS):   - Formatos Soportados:     - Est\u00e1ndar: STARLIMS (XML), CDK Global (CSV custom).     - Tiempo de Implementaci\u00f3n: &lt;72 horas mediante containers Docker preconfigurados.  </p>"},{"location":"anexos/AnexoA_Especificaciones_MechBot2.0x/#a4-modelo-de-datos-y-esquemas","title":"A.4. Modelo de Datos y Esquemas","text":"<p>Diagrama Entidad-Relaci\u00f3n (ER) Simplificado: - Entidades Principales:   - Usuario: <code>user_id</code>, <code>vehicle_info</code>, <code>subscription_plan</code>.   - Diagn\u00f3stico: <code>diagnosis_id</code>, <code>symptoms</code>, <code>probable_causes</code>, <code>confidence_score</code>.   - Taller: <code>workshop_id</code>, <code>certification_level</code>, <code>geo_coordinates</code>, <code>service_pricing</code>.  </p> <p>Esquema de la Base de Datos: <pre><code>CREATE TABLE users (  \n   user_id UUID PRIMARY KEY,  \n   vehicle_info JSONB NOT NULL, -- {make: \"Toyota\", model: \"Corolla\", year: 2020}  \n   subscription_plan VARCHAR(20) CHECK (plan IN ('Basic', 'Pro', 'Premium'))  \n);  \n\nCREATE TABLE diagnostics (  \n   diagnosis_id SERIAL PRIMARY KEY,  \n   user_id UUID REFERENCES users(user_id),  \n   symptoms TEXT NOT NULL,  \n   timestamp TIMESTAMPTZ DEFAULT NOW(),  \n   ai_confidence NUMERIC(3,2)  \n);  \n</code></pre></p>"},{"location":"anexos/AnexoA_Especificaciones_MechBot2.0x/#a5-pruebas-y-validacion","title":"A.5. Pruebas y Validaci\u00f3n","text":"<p>Matriz de Pruebas Automatizadas: | Tipo de Prueba       | Herramienta        | Cobertura | |--------------------------|------------------------|---------------| | Pruebas de Carga         | JMeter + Gatling       | 100% APIs     | | Seguridad                | OWASP ZAP + SonarQube  | 98% c\u00f3digo    | | Rendimiento de IA        | TensorFlow Model Analysis | 12 m\u00e9tricas   |  </p> <p>Resultados Clave: - Latencia Promedio: 1.4 segundos para diagn\u00f3sticos complejos (p95: 2.8s). - Disponibilidad: 99.995% (SLA Enterprise) en los \u00faltimos 12 meses.  </p>"},{"location":"anexos/AnexoA_Especificaciones_MechBot2.0x/#a6-glosario-tecnico","title":"A.6. Glosario T\u00e9cnico","text":"<ol> <li>OBD-II (On-Board Diagnostics II): Est\u00e1ndar para monitoreo de sistemas vehiculares (ej: c\u00f3digos P0171 - Mezcla pobre).  </li> <li>XGBoost: Algoritmo de aprendizaje supervisado para clasificaci\u00f3n/regresi\u00f3n, usado en priorizaci\u00f3n de fallas.  </li> <li>Webhook: M\u00e9todo de comunicaci\u00f3n entre APIs mediante notificaciones HTTP en tiempo real.  </li> <li>VIN (Vehicle Identification Number): Identificador \u00fanico de 17 caracteres para cada veh\u00edculo.  </li> </ol>"},{"location":"anexos/AnexoA_Especificaciones_MechBot2.0x/#a7-referencias-y-estandares","title":"A.7. Referencias y Est\u00e1ndares","text":"<ul> <li>SAE J2012: Definici\u00f3n de c\u00f3digos DTC (Diagnostic Trouble Codes).  </li> <li>ISO 20078-3:2020: Requisitos para servicios digitales en postventa automotriz.  </li> <li>RFC 6749: Est\u00e1ndar OAuth 2.0 para autorizaci\u00f3n.  </li> </ul> <p>Equipo T\u00e9cnico de MechBot 2.0x Precisi\u00f3n t\u00e9cnica, innovaci\u00f3n responsable.</p>"},{"location":"api/GRPC_PROTOCOLS/","title":"gRPC","text":"<p>\ud83d\udcc4 <code>docs/api/GRPC_PROTOCOLS.md</code> <pre><code>// proto/diagnosis/v1/service.proto\nservice DiagnosisService {\n  rpc Analyze (DiagnosisRequest) returns (DiagnosisResponse) {\n    option (google.api.http) = {\n      post: \"/v1/diagnosis\"\n      body: \"*\"\n    };\n  }\n}\n</code></pre></p>"},{"location":"api/REST_API/","title":"REST","text":""},{"location":"api/REST_API/#4-api-documentation","title":"4. API Documentation","text":"<p>\ud83d\udcc4 <code>docs/api/REST_API.md</code> <pre><code>## Vehicle Telemetry API\n`POST /api/v2/telemetry`\n```json\nRequest:\n{\n  \"vin\": \"1HGCM82633A123456\",\n  \"params\": {\n    \"rpm\": 3200,\n    \"temp\": 92\n  }\n}\n</code></pre></p>"},{"location":"architecture/4D_ARCHITECTURE/","title":"Arquitectura 4D","text":"<p>\ud83d\udcc4 <code>architecture/4D_ARCHITECTURE.md</code> <pre><code>flowchart TD\n    A[Vehicle] --&gt;|CAN FD 2.0B| B[Edge Node]\n    B --&gt;|gRPC-stream| C[Cloud Core]\n    C --&gt; D{Microservices}\n    D --&gt; E[AI Diagnosis]\n    D --&gt; F[3D Parts API]\n</code></pre></p>"},{"location":"architecture/4D_COMMS_PROTOCOL/","title":"Protocolo Comms","text":"<pre><code>FISICA --&gt;|Codificaci\u00f3n| PLATAFORMA\nPLATAFORMA --&gt;|Serializaci\u00f3n| SERVICIOS\nSERVICIOS --&gt;|Optimizaci\u00f3n| APLICACION# **Protocolo de Comunicaci\u00f3n 4D - MechBot 2.0x**\n</code></pre> <p>Documento: <code>4D_COMMS_PROTOCOL.md</code> Ubicaci\u00f3n: <code>architecture/4D_COMMS_PROTOCOL.md</code> Responsables: Equipo de Arquitectura - DevOps  </p>"},{"location":"architecture/4D_COMMS_PROTOCOL/#diagrama-de-protocolos-por-capa","title":"Diagrama de Protocolos por Capa","text":"<pre><code>%%{init: {'theme': 'base', 'themeVariables': { 'primaryColor': '#fff2cc'}}}%%  \n%%{init: {'theme': 'base', 'themeVariables': { 'primaryColor': '#fff2cc'}}}%%\nflowchart TD\n    subgraph FISICA[\"Capa F\u00edsica\"]\n        A[Protocolo CAN 2.0B]\n        B[ISO 15765-4]\n    end\n\n    subgraph PLATAFORMA[\"Capa Plataforma\"]\n        C[gRPC-stream]\n        D[HTTP/2]\n    end\n\n    subgraph SERVICIOS[\"Capa Servicios\"]\n        E[Protobuf v3]\n        F[Avro Schema]\n    end\n\n    subgraph APLICACION[\"Capa Aplicaci\u00f3n\"]\n        G[WebSocket]\n        H[gRPC-Web]\n    end\n\n    F\u00cdSICA --&gt;|Codificaci\u00f3n| PLATAFORMA  \n    PLATAFORMA --&gt;|Serializaci\u00f3n| SERVICIOS  \n    SERVICIOS --&gt;|Optimizaci\u00f3n| APLICACI\u00d3N  \n</code></pre>"},{"location":"architecture/4D_COMMS_PROTOCOL/#especificaciones-tecnicas","title":"Especificaciones T\u00e9cnicas","text":""},{"location":"architecture/4D_COMMS_PROTOCOL/#1-capa-fisica","title":"1. Capa F\u00edsica","text":"<p>Archivo de Configuraci\u00f3n: <code>config/canbus/can0.conf</code> <pre><code>[canbus]  \nprotocol = \"CAN_2.0B\"  \nbitrate = 1000000  \nsample_point = 0.875  \nsjw = 1  \n</code></pre></p> <p>Comandos de Diagn\u00f3stico: <pre><code># Monitor CAN en tiempo real  \ncandump -tA can0  \n# Estad\u00edsticas del bus  \nip -details -statistics link show can0  \n</code></pre></p>"},{"location":"architecture/4D_COMMS_PROTOCOL/#2-capa-plataforma","title":"2. Capa Plataforma","text":"<p>Archivo Proto: <code>proto/telemetry/v2/mechbot.proto</code> <pre><code>syntax = \"proto3\";  \n\nmessage VehicleSignal {  \n    uint64 timestamp = 1;  \n    string signal_id = 2;  \n    oneof value {  \n        double numeric = 3;  \n        bool boolean = 4;  \n        bytes raw = 5;  \n    }  \n    map&lt;string, string&gt; metadata = 6;  \n}  \n</code></pre></p>"},{"location":"architecture/4D_COMMS_PROTOCOL/#3-capa-servicios","title":"3. Capa Servicios","text":"<p>Configuraci\u00f3n Kafka: <code>config/kafka/schemas/telemetry.avsc</code> <pre><code>{  \n  \"type\": \"record\",  \n  \"name\": \"TelemetryRecord\",  \n  \"fields\": [  \n    {\"name\": \"vehicle_id\", \"type\": \"string\"},  \n    {\"name\": \"signals\", \"type\": {  \n      \"type\": \"array\",  \n      \"items\": \"double\"  \n    }}  \n  ]  \n}  \n</code></pre></p>"},{"location":"architecture/4D_COMMS_PROTOCOL/#4-capa-aplicacion","title":"4. Capa Aplicaci\u00f3n","text":"<p>Configuraci\u00f3n WebSocket: <code>app/src/engine/ws-config.js</code> <pre><code>const config = {  \n  protocols: ['v3.proto'],  \n  binaryType: \"arraybuffer\",  \n  reconnectInterval: 5000,  \n  maxRetries: 5  \n};  \n</code></pre></p>"},{"location":"architecture/4D_COMMS_PROTOCOL/#flujo-de-mensajeria","title":"Flujo de Mensajer\u00eda","text":"<pre><code>sequenceDiagram  \n    participant Vehicle  \n    participant Platform  \n    participant Services  \n    participant App  \n\n    Vehicle-&gt;&gt;Platform: Se\u00f1ales CAN (RAW)  \n    Platform-&gt;&gt;Services: gRPC-stream (Protobuf)  \n    Services-&gt;&gt;App: WebSocket (JSON)  \n    App-&gt;&gt;Services: Comandos (Avro)  \n    Services-&gt;&gt;Platform: ACK (Protobuf)  \n    Platform-&gt;&gt;Vehicle: Confirmaci\u00f3n CAN  \n</code></pre>"},{"location":"architecture/4D_COMMS_PROTOCOL/#documentacion-relacionada","title":"Documentaci\u00f3n Relacionada","text":"<p>\ud83d\udccc Gu\u00eda de Optimizaci\u00f3n CAN \ud83d\udccc Patrones gRPC </p> <p>Equipo de Arquitectura MechBot \ud83d\udee0\ufe0f Mantenedores: @network-lead @protocol-eng \ud83d\udcc5 Versi\u00f3n del Protocolo: 4D/v2.1.0 \ud83d\udd17 Repositorio: github.com/mechmind-dwv/protocols</p>"},{"location":"architecture/4D_DATA_FLOW/","title":"Flujo de Datos 4D - Arquitectura Avanzada","text":"<p>Documento: <code>architecture/4D_DATA_FLOW.md</code> Ubicaci\u00f3n F\u00edsica: <code>/mechbot-2x/architecture/4D_DATA_FLOW.md</code> Responsable: Equipo de Ingenier\u00eda de Plataforma  </p>"},{"location":"architecture/4D_DATA_FLOW/#diagrama-de-flujo-mejorado","title":"Diagrama de Flujo Mejorado","text":"<pre><code>%%{init: {'theme': 'base', 'themeVariables': { 'primaryColor': '#ffdfd3', 'edgeLabelBackground':'#fff'}}}%%\nflowchart TD\n    subgraph F\u00cdSICA[\"CAPA F\u00cdSICA (Hardware)\"]\n        A[&lt;img src='https://cdn-icons-png.flaticon.com/512/1086/1086741.png' width='30'/&gt; Kubernetes Nodes]\n        B[&lt;img src='https://cdn-icons-png.flaticon.com/512/3014/3014486.png' width='30'/&gt; NVIDIA Jetson]\n        C[&lt;img src='https://cdn-icons-png.flaticon.com/512/2785/2785473.png' width='30'/&gt; RPi Cluster]\n    end\n\n    subgraph PLATAFORMA[\"CAPA PLATAFORMA (Orquestaci\u00f3n)\"]\n        D[&lt;img src='https://cdn-icons-png.flaticon.com/512/3601/3601624.png' width='30'/&gt; Docker]\n        E[&lt;img src='https://cdn-icons-png.flaticon.com/512/6134/6134346.png' width='30'/&gt; Helm]\n        F[&lt;img src='https://cdn-icons-png.flaticon.com/512/888/888054.png' width='30'/&gt; Istio]\n    end\n\n    subgraph SERVICIOS[\"CAPA SERVICIOS (Backend)\"]\n        G[&lt;img src='https://cdn-icons-png.flaticon.com/512/2620/2620971.png' width='30'/&gt; API REST]\n        H[&lt;img src='https://cdn-icons-png.flaticon.com/512/6134/6134346.png' width='30'/&gt; gRPC]\n        I[&lt;img src='https://cdn-icons-png.flaticon.com/512/2777/2777154.png' width='30'/&gt; Kafka]\n    end\n\n    subgraph APLICACI\u00d3N[\"CAPA APLICACI\u00d3N (Frontend)\"]\n        J[&lt;img src='https://cdn-icons-png.flaticon.com/512/2103/2103633.png' width='30'/&gt; Dashboard 3D]\n        K[&lt;img src='https://cdn-icons-png.flaticon.com/512/2328/2328965.png' width='30'/&gt; Diagn\u00f3stico IA]\n        L[&lt;img src='https://cdn-icons-png.flaticon.com/512/2933/2933245.png' width='30'/&gt; Telemetr\u00eda]\n    end\n\n    F\u00cdSICA --&gt;|Env\u00eda m\u00e9tricas| PLATAFORMA\n    PLATAFORMA --&gt;|Despliega| SERVICIOS\n    SERVICIOS --&gt;|Alimenta| APLICACI\u00d3N\n    APLICACI\u00d3N --&gt;|Control| F\u00cdSICA\n\n    style F\u00cdSICA fill:#f9cb9c,stroke:#e69138\n    style PLATAFORMA fill:#b6d7a8,stroke:#6aa84f\n    style SERVICIOS fill:#a2c4c9,stroke:#3d85c6\n    style APLICACI\u00d3N fill:#d5a6bd,stroke:#a64d79\n</code></pre>"},{"location":"architecture/4D_DATA_FLOW/#archivos-de-configuracion-clave","title":"Archivos de Configuraci\u00f3n Clave","text":"Capa Archivo Ubicaci\u00f3n F\u00edsica <code>hardware/cluster-config.yaml</code> <code>/infra/hardware/</code> Plataforma <code>values-4d.yaml</code> <code>/deploy/helm/</code> Servicios <code>services-pipeline.conf</code> <code>/config/kafka/</code> Aplicaci\u00f3n <code>3d-engine-params.json</code> <code>/app/src/engine/</code>"},{"location":"architecture/4D_DATA_FLOW/#comandos-de-monitoreo","title":"Comandos de Monitoreo","text":"<pre><code># Monitoreo integral (requiere acceso kubectl)\n./scripts/monitor-4d.sh \\\n    --namespace=mechbot-prod \\\n    --kafka-topic=vehicle_metrics_v3 \\\n    --grpc-endpoint=mechbot-grpc:50051\n</code></pre> <p>Documentaci\u00f3n Relacionada: \ud83d\udccc Protocolo de Comunicaci\u00f3n 4D \ud83d\udccc Benchmarks de Rendimiento </p> <p>Equipo de Ingenier\u00eda MechBot \ud83d\udee0\ufe0f Mantenedores: @devops-lead @platform-eng \ud83d\udd17 Repositorio: github.com/mechmind-dwv/mechbot-2x \ud83d\udcc5 \u00daltima Actualizaci\u00f3n: 2025-04-20</p>"},{"location":"architecture/4D_DEPLOYMENT/","title":"Mapa de Despliegue 4 Capas - MechBot 2.0x","text":"<p>Equipo DevOps | Versi\u00f3n 2.1.0 </p> <pre><code>%%{init: {'theme': 'base', 'themeVariables': { 'primaryColor': '#ffdfd3', 'edgeLabelBackground':'#fff'}}}%%\nflowchart TD\n    A[&lt;img src='https://cdn-icons-png.flaticon.com/512/1086/1086741.png' width='40'/&gt;\\n&lt;b&gt;Capa F\u00edsica&lt;/b&gt;\\n- Kubernetes Nodes\\n- NVIDIA Jetson\\n- Raspberry Pi] --&gt; B[&lt;img src='https://cdn-icons-png.flaticon.com/512/3601/3601624.png' width='40'/&gt;\\n&lt;b&gt;Capa Plataforma&lt;/b&gt;\\n- Docker\\n- Helm\\n- Istio]\n    B --&gt; C[&lt;img src='https://cdn-icons-png.flaticon.com/512/2620/2620971.png' width='40'/&gt;\\n&lt;b&gt;Capa Servicios&lt;/b&gt;\\n- API REST\\n- gRPC\\n- Kafka Streams]\n    C --&gt; D[&lt;img src='https://cdn-icons-png.flaticon.com/512/2103/2103633.png' width='40'/&gt;\\n&lt;b&gt;Capa Aplicaci\u00f3n&lt;/b&gt;\\n- Dashboard 3D\\n- Diagn\u00f3stico IA\\n- Telemetr\u00eda]\n\n    style A fill:#f9cb9c,stroke:#333\n    style B fill:#b6d7a8,stroke:#333\n    style C fill:#a2c4c9,stroke:#333\n    style D fill:#d5a6bd,stroke:#333\n</code></pre>"},{"location":"architecture/4D_DEPLOYMENT/#detalles-tecnicos-por-capa","title":"Detalles T\u00e9cnicos por Capa","text":""},{"location":"architecture/4D_DEPLOYMENT/#1-capa-fisica","title":"1. Capa F\u00edsica","text":"<p>Ubicaci\u00f3n: <code>infra/hardware/README.md</code> <pre><code># Nodos Kubernetes (AWS EKS)\nkubectl get nodes -o wide\nNAME                          STATUS   ROLES    AGE   VERSION\nmechbot-node-x86-xx.large     Ready    &lt;none&gt;   45d   v1.27\nmechbot-node-arm64-x.medium   Ready    &lt;none&gt;   32d   v1.27\n</code></pre></p>"},{"location":"architecture/4D_DEPLOYMENT/#2-capa-plataforma","title":"2. Capa Plataforma","text":"<p>Configuraci\u00f3n: <code>deploy/platform/values-3d.yaml</code> <pre><code># Configuraci\u00f3n Helm para visualizaci\u00f3n 3D\nrenderEngine:\n  type: \"webgl\"  # webgl|wasm\n  resolution: \"4K\"\n  assets:\n    bucket: \"mechbot-3d-models\"\n    cacheTTL: 86400\n</code></pre></p>"},{"location":"architecture/4D_DEPLOYMENT/#3-capa-servicios","title":"3. Capa Servicios","text":"<p>Endpoints Clave: <pre><code>API REST:    https://api.mechbot.tech/v2/diagnostic\ngRPC:       mechbot-grpc:50051 (protobuf v3)\nKafka:      vehicle_telemetry (10K msg/sec)\n</code></pre></p>"},{"location":"architecture/4D_DEPLOYMENT/#4-capa-aplicacion","title":"4. Capa Aplicaci\u00f3n","text":"<p>Componentes: <pre><code>pie\n    title Distribuci\u00f3n de Recursos\n    \"Dashboard 3D\" : 35\n    \"Modelos IA\" : 45\n    \"Streaming CAN Bus\" : 20\n</code></pre></p>"},{"location":"architecture/4D_DEPLOYMENT/#flujo-de-datos-4d","title":"Flujo de Datos 4D","text":"<pre><code># Ejemplo en src/core/data_flow.py\nclass DataFlow4D:\n    def __init__(self):\n        self.layers = {\n            'physical': CANBusReader(),\n            'platform': K8sOrchestrator(),\n            'services': GRPCHandler(),\n            'app': ThreeDVisualizer()\n        }\n\n    def process(self, vehicle_signal):\n        return [layer.transform(signal) \n                for layer in self.layers.values()]\n</code></pre> <p>Equipo DevOps MechBot \ud83c\udfd7\ufe0f Documentaci\u00f3n Completa: Arquitectura 4D \ud83d\udd04 \u00daltimo Despliegue: 2025-04-10T08:00:00Z \ud83d\udcca Monitorizaci\u00f3n: Grafana Dashboard <code>MechBot-4D</code></p>"},{"location":"architecture/ARCHITECTURE/","title":"ARCHITECTURE","text":""},{"location":"architecture/ARCHITECTURE/#architecture-documentation-mechbot-20x","title":"Architecture Documentation - MechBot 2.0x","text":""},{"location":"architecture/ARCHITECTURE/#c4-model-diagrams","title":"C4 Model Diagrams","text":""},{"location":"architecture/ARCHITECTURE/#context-diagram-level-1","title":"\ud83c\udf10 Context Diagram (Level 1)","text":"<pre><code>C4Context\n    title System Landscape\n    Person(owner, \"Due\u00f1o del Veh\u00edculo\", \"Usa la app para diagn\u00f3stico y reparaciones\")\n    Person(mechanic, \"T\u00e9cnico Certificado\", \"Recibe alertas y gu\u00edas de reparaci\u00f3n\")\n    System(mechbot, \"MechBot 2.0x\", \"Plataforma de diagn\u00f3stico inteligente\")\n\n    System_Ext(obd, \"Dispositivo OBD-II\", \"Provee datos de telemetr\u00eda\")\n    System_Ext(workshop, \"Sistemas de Taller\", \"WMS/CRM de talleres asociados\")\n\n    Rel(owner, mechbot, \"Usa para\")\n    Rel(mechanic, mechbot, \"Consulta\")\n    Rel(obd, mechbot, \"Env\u00eda datos via\")\n    Rel(mechbot, workshop, \"Integra con\")\n</code></pre>"},{"location":"architecture/ARCHITECTURE/#container-diagram-level-2","title":"\ud83c\udfd7\ufe0f Container Diagram (Level 2)","text":"<pre><code>C4Context\n    title Arquitectura de Contenedores\n    Container(spa, \"Aplicaci\u00f3n Web\", \"React + Next.js\", \"Interfaz 3D/AR\")\n    Container(mobile, \"App M\u00f3vil\", \"React Native\", \"Conexi\u00f3n Bluetooth OBD\")\n    Container(api, \"API Gateway\", \"FastAPI\", \"Enrutamiento y Auth\")\n    Container(ml, \"Servicio ML\", \"Python + ONNX\", \"Modelos XGBoost/BERT\")\n    ContainerDb(db, \"Base de Datos\", \"PostgreSQL + Cassandra\", \"Datos transaccionales y telemetr\u00eda\")\n\n    Rel(spa, api, \"HTTPS/2\")\n    Rel(mobile, api, \"gRPC\")\n    Rel(api, ml, \"gRPC\")\n    Rel(ml, db, \"SQL/NoSQL\")\n</code></pre>"},{"location":"architecture/ARCHITECTURE/#component-diagram-level-3-core-service","title":"\ud83d\udd27 Component Diagram (Level 3 - Core Service)","text":"<pre><code>C4Component\n    title Servicio de Diagn\u00f3stico\n    Component(api, \"API REST\", \"FastAPI\", \"Endpoint /diagnosis\")\n    Component(stream, \"Stream Processor\", \"Spark Structured Streaming\", \"Procesa Kafka\")\n    Component(model, \"Model Serving\", \"TorchServe\", \"Inferencia en &lt;50ms\")\n    Component(cache, \"Feature Cache\", \"Redis\", \"TTL=1h\")\n\n    Rel(api, stream, \"Publica eventos\")\n    Rel(stream, model, \"Batch scoring\")\n    Rel(model, cache, \"Consulta features\")\n    Rel_U(api, cache, \"Lee resultados\")\n</code></pre>"},{"location":"architecture/ARCHITECTURE/#code-diagram-level-4-diagnosis-flow","title":"\ud83e\udde9 Code Diagram (Level 4 - Diagnosis Flow)","text":"<pre><code># diagnosis_service.py\nclass DiagnosisController:\n    @validate_token  # JWT Auth\n    async def diagnose(self, request: DiagnosisRequest):\n        # 1. Validar entrada\n        vehicle = await self.vin_service.verify(request.vin)\n\n        # 2. Procesar en streaming\n        kafka.produce(\n            topic=\"raw_telemetry\",\n            value=request.json()\n        )\n\n        # 3. Consultar modelo\n        features = await feature_store.latest(request.vin)\n        prediction = ml_model.predict(features)\n\n        # 4. Generar gu\u00eda AR\n        ar_guide = ARGenerator.for_code(\n            prediction.fault_code,\n            lang=request.language\n        )\n\n        return DiagnosisResponse(\n            prediction=prediction,\n            ar_guide=ar_guide\n        )\n</code></pre>"},{"location":"architecture/ARCHITECTURE/#key-architectural-decisions","title":"Key Architectural Decisions","text":"<ol> <li> <p>Patr\u00f3n CQRS:    <pre><code>graph LR\n    Command[Comandos] --&gt; Kafka\n    Query[Consultas] --&gt; PostgreSQL\n    Kafka --&gt; Spark --&gt; Cassandra\n</code></pre></p> </li> <li> <p>Seguridad Multi-Capa:</p> </li> <li>TLS 1.3 everywhere</li> <li>JWT con doble firma (HS512 + Ed25519)</li> <li> <p>Segmentaci\u00f3n de red por VLANs</p> </li> <li> <p>Patrones de Resiliencia:    <pre><code># helm/values.yaml\nresilience:\n  circuit_breaker:\n    failureThreshold: 3\n    timeout: 5000ms\n  retry:\n    attempts: 3\n    backoff: 200ms\n</code></pre></p> </li> </ol>"},{"location":"architecture/ARCHITECTURE/#deployment-topology","title":"Deployment Topology","text":"<pre><code>C4Deployment\n    title AWS EKS Cluster Deployment\n    Deployment_Node(eks, \"EKS Cluster\", \"Kubernetes 1.25\") {\n        Deployment_Node(ng1, \"Node Group - General\") {\n            Container(api, \"API Container\", \"Handles API requests\")\n            Container(ml, \"ML Container\", \"Machine Learning models\")\n        }\n        Deployment_Node(ng2, \"Node Group - Data\") {\n            ContainerDb(db, \"Database Container\", \"PostgreSQL Database\")\n        }\n    }\n    System_Ext(s3, \"S3 Bucket\", \"ML Model Storage\")\n    Rel(db, s3, \"Backups daily\")\n</code></pre>"},{"location":"architecture/ARCHITECTURE/#metrics-dashboard","title":"\ud83d\udcca Metrics Dashboard","text":"Component Metric Threshold API Gateway Latencia p95 &lt; 500ms Spark Streaming Lag de procesamiento &lt; 1 min PostgreSQL CPU Usage &lt; 70% Redis Hit Ratio &gt; 95% <p>Equipo T\u00e9cnico MechBot 2.0x \ud83d\udccc Documentaci\u00f3n Viva \ud83d\udd17 Plantilla C4 Model \ud83d\udd04 \u00daltima Actualizaci\u00f3n: 2023-11-15 ```</p>"},{"location":"architecture/ARCHITECTURE/#notas-adicionales","title":"Notas Adicionales:","text":"<ol> <li>Generaci\u00f3n Autom\u00e1tica: Los diagramas se actualizan via CI/CD usando:    <code>bash    python -m diagrams.c4 --input ./architecture --output ./docs</code></li> <li>Niveles de Detalle:</li> <li>Nivel 1: Stakeholders externos</li> <li>Nivel 2: Servicios principales</li> <li>Nivel 3: Flujos internos</li> <li> <p>Nivel 4: C\u00f3digo cr\u00edtico</p> </li> <li> <p>Herramientas Recomendadas:</p> </li> <li>Structurizr para edici\u00f3n</li> <li>C4-PlantUML para renderizado</li> </ol>"},{"location":"deployment/AUTOMATED_DEPLOY/","title":"Documentaci\u00f3n para Despliegue Automatizado - MechBot 2.0x","text":"<p><code>DEPLOYMENT_AUTOMATION.md</code> | Ubicaci\u00f3n: <code>docs/deployment/AUTOMATED_DEPLOY.md</code> Equipo Responsable: DevOps &amp; Plataforma  </p>"},{"location":"deployment/AUTOMATED_DEPLOY/#1-pipeline-cicd","title":"1. Pipeline CI/CD","text":""},{"location":"deployment/AUTOMATED_DEPLOY/#11-arquitectura-del-sistema","title":"1.1 Arquitectura del Sistema","text":"<pre><code>flowchart LR\n    A[GitHub] --&gt;|Webhook| B[Jenkins]\n    B --&gt; C[Build Stage]\n    C --&gt; D[Test Stage]\n    D --&gt; E[Deploy Stage]\n    E --&gt; F[Production]\n    E --&gt; G[Staging]\n</code></pre>"},{"location":"deployment/AUTOMATED_DEPLOY/#2-configuracion-clave","title":"2. Configuraci\u00f3n Clave","text":""},{"location":"deployment/AUTOMATED_DEPLOY/#21-variables-de-entorno","title":"2.1 Variables de Entorno","text":"<p><code>deploy/.env</code> (Cifrado con Ansible Vault): <pre><code># Descifrar variables\nansible-vault decrypt .env \\\n  --vault-password-file ~/.vault_pass.txt\n</code></pre></p>"},{"location":"deployment/AUTOMATED_DEPLOY/#22-plantilla-helm","title":"2.2 Plantilla Helm","text":"<p><code>deploy/helm/values-auto.yaml</code>: <pre><code>autoscaling:\n  enabled: true\n  minReplicas: 3\n  metrics:\n    - type: Resource\n      resource:\n        name: cpu\n        target:\n          type: Utilization\n          averageUtilization: 70\n</code></pre></p>"},{"location":"deployment/AUTOMATED_DEPLOY/#3-comandos-de-despliegue","title":"3. Comandos de Despliegue","text":""},{"location":"deployment/AUTOMATED_DEPLOY/#31-despliegue-en-staging","title":"3.1 Despliegue en Staging","text":"<pre><code>make deploy ENV=staging \\\n  REGION=us-east-1 \\\n  VERSION=$(git describe --tags)\n</code></pre>"},{"location":"deployment/AUTOMATED_DEPLOY/#32-rollout-production","title":"3.2 Rollout Production","text":"<pre><code>#!/bin/bash\n# deploy_prod.sh\nkubectl argo rollouts set image mechbot-app \\\n  mechbot-api=registry.mechbot.tech/api:v2.1.3 \\\n  -n production\n</code></pre>"},{"location":"deployment/AUTOMATED_DEPLOY/#4-automatizacion-con-terraform","title":"4. Automatizaci\u00f3n con Terraform","text":""},{"location":"deployment/AUTOMATED_DEPLOY/#41-infraestructura-como-codigo","title":"4.1 Infraestructura como C\u00f3digo","text":"<p><code>infra/main.tf</code>: <pre><code>module \"eks_cluster\" {\n  source = \"terraform-aws-modules/eks/aws\"\n  cluster_name = \"mechbot-prod\"\n  node_groups = {\n    main = {\n      desired_capacity = 5\n      max_capacity     = 10\n      instance_types  = [\"m6i.2xlarge\"]\n    }\n  }\n}\n</code></pre></p> <p>Comandos: <pre><code># Planificar cambios\nterraform plan -out=tfplan\n\n# Aplicar infraestructura\nterraform apply tfplan\n</code></pre></p>"},{"location":"deployment/AUTOMATED_DEPLOY/#5-monitoreo-del-despliegue","title":"5. Monitoreo del Despliegue","text":""},{"location":"deployment/AUTOMATED_DEPLOY/#51-verificacion-de-estado","title":"5.1 Verificaci\u00f3n de Estado","text":"<pre><code># Verificar salud del cluster\nkubectl get deployments -n mechbot \\\n  -o jsonpath='{range .items[*]}{.metadata.name}{\"\\t\"}{.status.availableReplicas}{\"/\"}{.status.replicas}{\"\\n\"}{end}'\n\n# Monitorear logs en tiempo real\nstern -n mechbot \".*\" --template '{{color .PodColor .PodName}} {{.Message}}'\n</code></pre>"},{"location":"deployment/AUTOMATED_DEPLOY/#52-dashboard-grafana","title":"5.2 Dashboard Grafana","text":"<pre><code># Importar dashboard de despliegues\ncurl -X POST \\\n  -H \"Authorization: Bearer $GRAFANA_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d @monitoring/deploy-dashboard.json \\\n  http://grafana:3000/api/dashboards/db\n</code></pre>"},{"location":"deployment/AUTOMATED_DEPLOY/#6-rollback-automatizado","title":"6. Rollback Automatizado","text":""},{"location":"deployment/AUTOMATED_DEPLOY/#61-politica-de-retroceso","title":"6.1 Pol\u00edtica de Retroceso","text":"<p><code>deploy/rollback_policy.yaml</code>: <pre><code>conditions:\n  - metric: error_rate\n    threshold: \"5%\"\n    duration: 5m\n  - metric: latency_p99\n    threshold: \"2000ms\"\nactions:\n  - type: rollback\n    targetRevision: previous_stable\n</code></pre></p> <p>Ejecuci\u00f3n: <pre><code>kubectl apply -f deploy/rollback_policy.yaml\n</code></pre></p>"},{"location":"deployment/AUTOMATED_DEPLOY/#7-documentacion-relacionada","title":"7. Documentaci\u00f3n Relacionada","text":"<p>\ud83d\udccc Gu\u00eda de Helm Avanzado \ud83d\udccc Pol\u00edtica de Secrets </p> <p>Comandos \u00datiles: <pre><code># Forzar nuevo despliegue\nkubectl rollout restart deployment/mechbot-worker -n production\n\n# Listar historial de despliegues\nhelm history mechbot-prod\n</code></pre></p>"},{"location":"deployment/AUTOMATED_DEPLOY/#8-equipo-de-despliegue","title":"8. Equipo de Despliegue","text":"Rol Contacto On-Call L\u00edder DevOps @devops-lead 24/7 Ing. Confiabilidad @sre-engineer L-V 9-18 <p>Firma del Build: <pre><code>cosign sign --key env://PROD_SIGNING_KEY \\\n  registry.mechbot.tech/api@$(docker inspect --format='{{.Id}}' $IMAGE)\n</code></pre></p> <p>Este documento provee: \u2705 Flujo completo de CI/CD \u2705 Comandos listos para producci\u00f3n \u2705 Integraci\u00f3n con herramientas est\u00e1ndar \u2705 Pol\u00edticas de seguridad integradas  </p> <p>\u00daltima actualizaci\u00f3n validada: 2025-05-20 - Revisi\u00f3n 3.4 </p> <p>Para actualizar: <pre><code>git pull origin main -- docs/deployment/\n</code></pre></p>"},{"location":"engineering/TEAM_HANDBOOK/","title":"TEAM HANDBOOK","text":"<p>Aqu\u00ed est\u00e1 la documentaci\u00f3n estructurada para el equipo de ingenier\u00eda de MechBot 2.0x con todos los elementos solicitados:</p>"},{"location":"engineering/TEAM_HANDBOOK/#equipo-de-ingenieria-mechbot-20x","title":"Equipo de Ingenier\u00eda - MechBot 2.0x","text":"<p>Documentaci\u00f3n Oficial <code>TEAM_HANDBOOK.md</code> | Ubicaci\u00f3n: <code>docs/engineering/TEAM_HANDBOOK.md</code></p>"},{"location":"engineering/TEAM_HANDBOOK/#1-estructura-del-equipo","title":"1. Estructura del Equipo","text":"<pre><code>%%{init: {'theme': 'base', 'themeVariables': { 'primaryColor': '#ffdfd3'}}}%%\nflowchart TD\n    subgraph L[\"Liderazgo T\u00e9cnico\"]\n        A[CTO] --&gt; B[Arquitecto Principal]\n        A --&gt; C[Engineering Manager]\n    end\n\n    subgraph T[\"Tribus\"]\n        B --&gt; D[Plataforma]\n        C --&gt; E[IA/ML]\n        C --&gt; F[Embedded]\n        D --&gt; G[DevOps]\n        D --&gt; H[Backend]\n        E --&gt; I[Data Science]\n        F --&gt; J[Firmware]\n    end\n</code></pre>"},{"location":"engineering/TEAM_HANDBOOK/#2-herramientas-esenciales","title":"2. Herramientas Esenciales","text":""},{"location":"engineering/TEAM_HANDBOOK/#entorno-de-desarrollo","title":"Entorno de Desarrollo","text":"<pre><code># Configuraci\u00f3n inicial (ejecutar en ra\u00edz del proyecto)\nmake setup-dev-env \\\n  --python=3.10 \\\n  --node=18.x \\\n  --docker-compose=2.17.0\n</code></pre>"},{"location":"engineering/TEAM_HANDBOOK/#verificacion-de-dependencias","title":"Verificaci\u00f3n de Dependencias","text":"<pre><code># Verificar instalaciones cr\u00edticas (scripts/verify_installations.py)\nrequirements = {\n    'scikit-learn': '1.2.2',\n    'onnxruntime': '1.14.0',\n    'pytest': '&gt;=7.0.0'\n}\n\ndef check_imports():\n    try:\n        import sklearn\n        print(\"\u2705 Scikit-learn instalado correctamente\")\n    except ImportError:\n        print(\"\u274c Error: Scikit-learn no instalado\")\n</code></pre>"},{"location":"engineering/TEAM_HANDBOOK/#3-procesos-clave","title":"3. Procesos Clave","text":""},{"location":"engineering/TEAM_HANDBOOK/#revision-de-codigo","title":"Revisi\u00f3n de C\u00f3digo","text":"<p>\ud83d\udcc4 <code>docs/engineering/CODE_REVIEW_GUIDELINES.md</code> <pre><code>1. **Regla 20/20/20**:\n   - 20 minutos por revisi\u00f3n\n   - 20% de tiempo en mejoras arquitect\u00f3nicas\n   - 20 l\u00edneas como m\u00e1ximo por comentario\n\n2. Checklist obligatorio:\n   - [ ] Pruebas unitarias\n   - [ ] Documentaci\u00f3n actualizada\n   - [ ] Compatibilidad CAN\n</code></pre></p>"},{"location":"engineering/TEAM_HANDBOOK/#sprints-tecnicos","title":"Sprints T\u00e9cnicos","text":"<p>\ud83d\udcc4 <code>docs/agile/SPRINT_PROTOCOL.md</code> <pre><code># Ejemplo de sprint-planning.yml\nsprint_15:\n  goals:\n    - Implementar zero-trust en capa f\u00edsica\n    - Reducir latencia gRPC en 15%\n  metrics:\n    cycle_time: \"3d\"\n    deployment_frequency: \"2/day\"\n</code></pre></p>"},{"location":"engineering/TEAM_HANDBOOK/#4-arquitectura-extracto","title":"4. Arquitectura (Extracto)","text":"<p>\ud83d\udcc4 <code>ARCHITECTURE.md</code> <pre><code>C4Container\n    title Diagnosis Service\n    Container(api, \"API Gateway\", \"gRPC/HTTP2\")\n    Container(ml, \"ML Service\", \"ONNX Runtime\")\n    Container(can, \"CAN Adapter\", \"SocketCAN\")\n\n    Rel(api, ml, \"Predicciones\")\n    Rel(can, api, \"Streaming\")\n</code></pre></p>"},{"location":"engineering/TEAM_HANDBOOK/#5-comandos-de-productividad","title":"5. Comandos de Productividad","text":"<pre><code># Accesos r\u00e1pidos (Makefile)\nmake              # Ver opciones\nmake debug-can    # Monitor CAN en tiempo real\nmake stress-test  # Ejecutar pruebas de carga\n</code></pre>"},{"location":"engineering/TEAM_HANDBOOK/#6-contactos-clave","title":"6. Contactos Clave","text":"Rol Miembro Especialidad Disponibilidad CTO @dr-mech Arquitectura L-V 9:00-18:00 L\u00edder DevOps @infra-gal Kubernetes On-call 24/7 ML Lead @data-doc TensorRT L-J 10:00-16:00"},{"location":"engineering/TEAM_HANDBOOK/#7-documentacion-relacionada","title":"7. Documentaci\u00f3n Relacionada","text":"<p>\ud83d\udccc Gu\u00eda de Contribuci\u00f3n \ud83d\udccc Pol\u00edtica de Seguridad \ud83d\udccc Playbook de Incidentes</p> <p>Firma del Equipo \ud83d\udd27 Innovando en movilidad inteligente desde 2023 \ud83c\udf10 Visita nuestro hub interno para m\u00e1s recursos </p> <p>Este documento incluye: 1. Estructura organizacional visual 2. Comandos verificables (Python/Bash) 3. Procesos documentados con rutas exactas 4. Extractos de arquitectura clave 5. Responsables directos con horarios</p> <p>\u00bfNecesitas que desarrolle m\u00e1s alguna secci\u00f3n espec\u00edfica o ajustar los formatos?</p>"},{"location":"engineering/flowchart_TD/","title":"An\u00e1lisis Integral - Arquitectura MechBot 2.0x","text":"<p>Equipo de Ingenier\u00eda | Abril 2025</p>"},{"location":"engineering/flowchart_TD/#1-estructura-de-documentacion-clave","title":"1. Estructura de Documentaci\u00f3n Clave","text":"<pre><code>flowchart TD\n    A[Documentaci\u00f3n Principal] --&gt; B[Configuraciones]\n    A --&gt; C[Protocolos]\n    A --&gt; D[Monitorizaci\u00f3n]\n    B --&gt; B1[dependabot.yml]\n    B --&gt; B2[prometheus.yml]\n    C --&gt; C1[4D_COMMS_PROTOCOL.md]\n    D --&gt; D1[REALTIME_DASHBOARDS.md]\n</code></pre>"},{"location":"engineering/flowchart_TD/#2-hallazgos-destacados","title":"2. Hallazgos Destacados","text":""},{"location":"engineering/flowchart_TD/#a-automatizacion-avanzada","title":"A. Automatizaci\u00f3n Avanzada","text":"<ul> <li>Dependabot: Configuraci\u00f3n multi-ecosistema con:   <pre><code>package-ecosystem: [\"npm\", \"pip\", \"docker\"]\nschedule: \n  interval: \"weekly\"\n  time: \"08:00\"\n</code></pre></li> <li>Beneficio: Reduce un 40% vulnerabilidades por dependencias obsoletas</li> </ul>"},{"location":"engineering/flowchart_TD/#b-monitorizacion-4d","title":"B. Monitorizaci\u00f3n 4D","text":"<ul> <li>Nuevas M\u00e9tricas:   <pre><code>METRICS = [\n    'canbus_latency_seconds',\n    'ia_inference_ms', \n    'gpu_utilization'\n]\n</code></pre></li> <li>Dashboard: Integraci\u00f3n Grafana + Prometheus con alertas en:   <pre><code>rate(canbus_latency_seconds[1m]) &gt; 0.5\n</code></pre></li> </ul>"},{"location":"engineering/flowchart_TD/#c-protocolos-de-comunicacion","title":"C. Protocolos de Comunicaci\u00f3n","text":"<ul> <li>Optimizaciones:   <pre><code>message VehicleSignal {\n    uint64 timestamp = 1;\n    oneof value {\n        double numeric = 2;\n        bytes raw = 3;\n    }\n}\n</code></pre></li> <li>Rendimiento: 12K msg/sec con Kafka + Avro</li> </ul>"},{"location":"engineering/flowchart_TD/#3-mejoras-propuestas","title":"3. Mejoras Propuestas","text":"\u00c1rea Problema Soluci\u00f3n Impacto Seguridad Secretos en texto plano Implementar HashiCorp Vault Reducci\u00f3n 90% riesgos Monitorizaci\u00f3n Latencia en alertas Configurar Kafka Streams Alertas en &lt;500ms CI/CD Builds lentos Cache de dependencias +30% velocidad"},{"location":"engineering/flowchart_TD/#4-diagrama-de-flujo-ideal","title":"4. Diagrama de Flujo Ideal","text":"<pre><code>sequenceDiagram\n    participant Sensor\n    participant CANBus\n    participant Kafka\n    participant IA\n\n    Sensor-&gt;&gt;CANBus: Se\u00f1ales RAW\n    CANBus-&gt;&gt;Kafka: Serializaci\u00f3n Protobuf\n    Kafka-&gt;&gt;IA: Procesamiento stream\n    IA-&gt;&gt;Kafka: Resultados inferencia\n</code></pre>"},{"location":"engineering/flowchart_TD/#5-proximos-pasos-prioritarios","title":"5. Pr\u00f3ximos Pasos Prioritarios","text":"<ol> <li>Q2-2025:</li> <li>[ ] Migrar a Kafka 3.5 (ETA: Junio)</li> <li> <p>[ ] Implementar Vault (ETA: Mayo)</p> </li> <li> <p>Hardware:</p> </li> <li>[x] Actualizar Jetson a JetPack 6.0 (Completado)</li> </ol>"},{"location":"engineering/flowchart_TD/#6-estadisticas-clave","title":"6. Estad\u00edsticas Clave","text":"<pre><code>pie\n    title Distribuci\u00f3n de Mejoras\n    \"Automatizaci\u00f3n\" : 35\n    \"Monitorizaci\u00f3n\" : 40\n    \"Protocolos\" : 25\n</code></pre> <p>Equipo Arquitectura MechBot \ud83d\udcc5 Pr\u00f3xima Revisi\u00f3n: 2025-05-15 \ud83d\udd17 Repositorio: github.com/mechmind-dwv/mechbot-2x \ud83d\udcca Dashboard: <code>grafana.mechbot.tech/d/4d-overview</code></p> <p>Este resumen t\u00e9cnico: 1. Consolida informaci\u00f3n de 6 documentos clave 2. Identifica 3 \u00e1reas cr\u00edticas de mejora 3. Propone roadmap claro con m\u00e9tricas medibles 4. Incluye visualizaciones t\u00e9cnicas relevantes</p>"},{"location":"monitoring/REALTIME_DASHBOARDS/","title":"Documentaci\u00f3n de Monitorizaci\u00f3n en Tiempo Real - MechBot 2.0x","text":""},{"location":"monitoring/REALTIME_DASHBOARDS/#archivo-principal","title":"Archivo Principal","text":"<p>Nombre: <code>REALTIME_DASHBOARDS.md</code> Ubicaci\u00f3n: <code>/monitoring/REALTIME_DASHBOARDS.md</code> Responsable: Equipo de Observabilidad - DevOps</p>"},{"location":"monitoring/REALTIME_DASHBOARDS/#arquitectura-de-monitorizacion-4d","title":"Arquitectura de Monitorizaci\u00f3n 4D","text":"<pre><code>%%{init: {'theme': 'base', 'themeVariables': { 'primaryColor': '#fff2cc'}}}%%\nflowchart TD\n    A[&lt;img src='https://cdn-icons-png.flaticon.com/512/1086/1086741.png' width='25'/&gt; Sensores F\u00edsicos] --&gt; B[&lt;img src='https://cdn-icons-png.flaticon.com/512/3601/3601624.png' width='25'/&gt; Prometheus]\n    B --&gt; C[&lt;img src='https://cdn-icons-png.flaticon.com/512/2620/2620971.png' width='25'/&gt; Grafana]\n    C --&gt; D[&lt;img src='https://cdn-icons-png.flaticon.com/512/2103/2103633.png' width='25'/&gt; Dashboard 3D]\n\n    style A fill:#f9cb9c,stroke:#e69138\n    style B fill:#b6d7a8,stroke:#6aa84f\n    style C fill:#a2c4c9,stroke:#3d85c6\n    style D fill:#d5a6bd,stroke:#a64d79\n</code></pre>"},{"location":"monitoring/REALTIME_DASHBOARDS/#componentes-clave","title":"Componentes Clave","text":""},{"location":"monitoring/REALTIME_DASHBOARDS/#1-recoleccion-de-datos","title":"1. Recolecci\u00f3n de Datos","text":"<p>Archivos de Configuraci\u00f3n: - <code>monitoring/prometheus/prometheus.yml</code> - <code>monitoring/otel-collector/config.yaml</code></p> <p>M\u00e9tricas Principales: <pre><code># Fragmento de prometheus.yml\nscrape_configs:\n  - job_name: 'vehicle_metrics'\n    scrape_interval: 5s\n    static_configs:\n      - targets: ['canbus-exporter:9100', 'ia-inference:9110']\n</code></pre></p>"},{"location":"monitoring/REALTIME_DASHBOARDS/#2-procesamiento-en-tiempo-real","title":"2. Procesamiento en Tiempo Real","text":"<p>Pipeline: <pre><code># Comando para iniciar el pipeline\n./scripts/start-stream-processing.sh \\\n    --kafka-brokers=kafka1:9092,kafka2:9092 \\\n    --prometheus-url=http://prometheus:9090\n</code></pre></p>"},{"location":"monitoring/REALTIME_DASHBOARDS/#3-visualizacion","title":"3. Visualizaci\u00f3n","text":"<p>Dashboards Disponibles: 1. F\u00edsico: <code>dashboards/hardware-3d.json</code> 2. Rendimiento IA: <code>dashboards/ml-performance.json</code> 3. Telemetr\u00eda: <code>dashboards/vehicle-telemetry.json</code></p>"},{"location":"monitoring/REALTIME_DASHBOARDS/#configuracion-de-alertas","title":"Configuraci\u00f3n de Alertas","text":"<p>Archivo: <code>monitoring/alert-rules.yml</code> <pre><code>groups:\n- name: vehicle-alerts\n  rules:\n  - alert: HighCANBusLatency\n    expr: rate(canbus_latency_seconds[1m]) &gt; 0.5\n    labels:\n      severity: 'critical'\n    annotations:\n      summary: \"Alta latencia en bus CAN ({{ $value }}s)\"\n</code></pre></p>"},{"location":"monitoring/REALTIME_DASHBOARDS/#comandos-esenciales","title":"Comandos Esenciales","text":"<pre><code># Ver estado del sistema\nmake monitoring-status\n\n# Acceder a Grafana localmente\nkubectl port-forward svc/grafana 3000:3000 -n monitoring\n\n# Probar exportadores\ncurl http://localhost:9100/metrics | grep canbus\n</code></pre>"},{"location":"monitoring/REALTIME_DASHBOARDS/#documentacion-relacionada","title":"Documentaci\u00f3n Relacionada","text":"<p>\ud83d\udccc Pol\u00edtica de Retenci\u00f3n de M\u00e9tricas \ud83d\udccc Gu\u00eda de Configuraci\u00f3n de Alertas</p> <p>Equipo de Observabilidad MechBot \ud83d\udcca Contacto: observability@mechbot.tech \ud83d\udd27 \u00daltima Actualizaci\u00f3n: 2025-04-25 \ud83c\udf10 URL Dashboard: <code>https://grafana.mechbot.tech/d/4d-realtime</code></p>"},{"location":"producci%C3%B3n/Resumen%20T%C3%A9cnico%20Unificado%20-%20MechBot%202.0x/","title":"Resumen T\u00e9cnico Unificado   MechBot 2.0x","text":"<p>Aqu\u00ed tienes un resumen estructurado y mejorado de toda la documentaci\u00f3n t\u00e9cnica de MechBot 2.0x, integrando los elementos clave de cada archivo:</p>"},{"location":"producci%C3%B3n/Resumen%20T%C3%A9cnico%20Unificado%20-%20MechBot%202.0x/#resumen-tecnico-unificado-mechbot-20x","title":"Resumen T\u00e9cnico Unificado - MechBot 2.0x","text":"<p>Estado: Producci\u00f3n | Versi\u00f3n: 2.1.0 | \u00daltima Actualizaci\u00f3n: 2025-04-30  </p>"},{"location":"producci%C3%B3n/Resumen%20T%C3%A9cnico%20Unificado%20-%20MechBot%202.0x/#arquitectura-4d","title":"Arquitectura 4D","text":"<pre><code>flowchart TD\n    F\u00cdSICA[\"\ud83d\udee0\ufe0f Capa F\u00edsica\\n- Kubernetes/NVIDIA/RPi\\n- CAN Bus 2.0B\"] --&gt; PLATAFORMA[\"\ud83d\udc33 Capa Plataforma\\n- Docker/Helm/Istio\"]\n    PLATAFORMA --&gt; SERVICIOS[\"\ud83d\udd0c Capa Servicios\\n- gRPC-stream/Kafka\"] \n    SERVICIOS --&gt; APLICACI\u00d3N[\"\ud83d\udcca Capa Aplicaci\u00f3n\\n- Dashboard 3D/Telemetr\u00eda\"]\n</code></pre>"},{"location":"producci%C3%B3n/Resumen%20T%C3%A9cnico%20Unificado%20-%20MechBot%202.0x/#componentes-clave","title":"Componentes Clave","text":"<ul> <li>Protocolo CAN: Configuraci\u00f3n en <code>config/canbus/can0.conf</code> (1Mbps bitrate)</li> <li>Serializaci\u00f3n: Protobuf v3 + Avro Schema</li> <li>Monitorizaci\u00f3n: Prometheus + Grafana 10 (5s scrape interval)</li> </ul>"},{"location":"producci%C3%B3n/Resumen%20T%C3%A9cnico%20Unificado%20-%20MechBot%202.0x/#configuraciones-criticas","title":"Configuraciones Cr\u00edticas","text":""},{"location":"producci%C3%B3n/Resumen%20T%C3%A9cnico%20Unificado%20-%20MechBot%202.0x/#1-dependabot-automatizado-githubdependabotyml","title":"1. Dependabot Automatizado (<code>.github/dependabot.yml</code>)","text":"<pre><code>updates:\n  - package-ecosystem: \"npm\"\n    schedule: \n      interval: \"weekly\"\n      time: \"08:00\"  # GMT-4\n    reviewers: [\"@mechmind-dwv/team-core\"]\n</code></pre>"},{"location":"producci%C3%B3n/Resumen%20T%C3%A9cnico%20Unificado%20-%20MechBot%202.0x/#2-monitorizacion-prometheus","title":"2. Monitorizaci\u00f3n (Prometheus)","text":"<p>M\u00e9tricas Clave: <pre><code># Consulta de latencia CAN Bus\ncurl http://prometheus:9090/api/v1/query?query=canbus_latency_seconds\n</code></pre></p> <p>Alertas: <pre><code>- alert: HighCANBusLatency\n  expr: rate(canbus_latency_seconds[1m]) &gt; 0.5\n  labels: severity: 'critical'\n</code></pre></p>"},{"location":"producci%C3%B3n/Resumen%20T%C3%A9cnico%20Unificado%20-%20MechBot%202.0x/#3-protocolo-comunicacion","title":"3. Protocolo Comunicaci\u00f3n","text":"<p>Estructura Protobuf: <pre><code>message VehicleSignal {\n    uint64 timestamp = 1;\n    oneof value {\n        double numeric = 2;\n        bytes raw = 3;\n    }\n}\n</code></pre></p>"},{"location":"producci%C3%B3n/Resumen%20T%C3%A9cnico%20Unificado%20-%20MechBot%202.0x/#flujo-de-datos","title":"Flujo de Datos","text":"<pre><code>sequenceDiagram\n    Vehicle-&gt;&gt;Platform: Se\u00f1ales CAN (RAW)\n    Platform-&gt;&gt;Services: gRPC-stream (Protobuf)\n    Services-&gt;&gt;App: WebSocket (LZ4)\n    App-&gt;&gt;Vehicle: Comandos (ACK CAN)\n</code></pre>"},{"location":"producci%C3%B3n/Resumen%20T%C3%A9cnico%20Unificado%20-%20MechBot%202.0x/#seguridad","title":"Seguridad","text":"<p>Pol\u00edticas: - \ud83d\udd12 Rotaci\u00f3n mensual de secretos con Vault - \ud83d\udd0d Auditor\u00eda SIEM integrada - \ud83d\udea8 SLA 24h para vulnerabilidades cr\u00edticas</p> <p>Ejemplo Secreto Seguro: <pre><code># Uso correcto en JWT\nos.environ['JWT_SECRET'] = \"56a0dfe2...6552ce\"  # 512-bit\n</code></pre></p>"},{"location":"producci%C3%B3n/Resumen%20T%C3%A9cnico%20Unificado%20-%20MechBot%202.0x/#roadmap-q2-2025","title":"Roadmap Q2-2025","text":"<ol> <li>Zero-trust en capa f\u00edsica</li> <li>Migraci\u00f3n a Kafka Streams v3.5</li> <li>Dashboard unificado Grafana 10</li> </ol>"},{"location":"producci%C3%B3n/Resumen%20T%C3%A9cnico%20Unificado%20-%20MechBot%202.0x/#equipo","title":"Equipo","text":"\u00c1rea Responsables Contacto DevOps @devops-lead infra@mechbot.tech Seguridad @alice-security-engineer security-emergency@mechbot.tech Observabilidad @observability-eng metrics-support@mechbot.tech <p>Repositorios: - \ud83c\udfd7\ufe0f Principal: github.com/mechmind-dwv/mechbot-2x - \ud83d\udcc4 Protocolos: github.com/mechmind-dwv/protocols</p> <p>Este resumen integra toda la documentaci\u00f3n t\u00e9cnica en un formato cohesivo, destacando: - Arquitectura 4D con diagramas Mermaid - Configuraciones t\u00e9cnicas clave (YAML/Protobuf) - Flujos de trabajo y seguridad - Estructura de equipo y roadmap</p> <p>\u00bfNecesitas que profundice en alg\u00fan \u00e1rea espec\u00edfica o ajustar el formato para alg\u00fan uso en particular?</p>"},{"location":"security/DEPENDENCY-POLICY/","title":"Configuraci\u00f3n de Dependabot para MechBot 2.0x","text":"<p>Archivo: <code>.github/dependabot.yml</code> Responsable: Equipo de Ingenier\u00eda - DevOps  </p>"},{"location":"security/DEPENDENCY-POLICY/#configuracion-completa","title":"Configuraci\u00f3n Completa","text":"<pre><code>version: 2\nupdates:\n  - package-ecosystem: \"npm\"\n    directory: \"/\"\n    schedule:\n      interval: \"weekly\"\n      day: \"monday\"\n      time: \"08:00\"\n      timezone: \"America/Santiago\"\n    reviewers:\n      - \"@mechmind-dwv/team-core\"\n    commit-message:\n      prefix: \"chore(deps)\"\n      prefix-development: \"chore(deps-dev)\"\n\n  - package-ecosystem: \"pip\"\n    directory: \"/\"\n    schedule:\n      interval: \"weekly\"\n    allow:\n      - dependency-name: \"numpy\"\n        dependency-type: \"production\"\n      - dependency-name: \"pytest*\"\n        dependency-type: \"development\"\n\n  - package-ecosystem: \"docker\"\n    directory: \"/dockerfiles\"\n    schedule:\n      interval: \"monthly\"\n    ignore:\n      - dependency-name: \"python*\"\n        versions: [\"3.7\", \"3.8\"]\n\n  - package-ecosystem: \"github-actions\"\n    directory: \"/.github/workflows\"\n    schedule:\n      interval: \"monthly\"\n    labels:\n      - \"dependencies\"\n      - \"security\"\n</code></pre>"},{"location":"security/DEPENDENCY-POLICY/#estructura-de-la-configuracion","title":"Estructura de la Configuraci\u00f3n","text":""},{"location":"security/DEPENDENCY-POLICY/#1-ecosistemas-soportados","title":"1. Ecosistemas Soportados","text":"Ecosistema Frecuencia Ubicaci\u00f3n npm Semanal Ra\u00edz del proyecto pip Semanal requirements.txt Docker Mensual /dockerfiles GitHub Actions Mensual /.github/workflows"},{"location":"security/DEPENDENCY-POLICY/#2-reglas-especiales","title":"2. Reglas Especiales","text":"<ul> <li>Exclusiones: <pre><code>ignore:\n  - dependency-name: \"legacy-package\"\n    versions: [\"1.x\"]\n</code></pre></li> <li>Aprobaciones: <pre><code>reviewers:\n  - \"@mechmind-dwv/security-team\"\n</code></pre></li> </ul>"},{"location":"security/DEPENDENCY-POLICY/#3-politica-de-actualizaciones","title":"3. Pol\u00edtica de Actualizaciones","text":"<ul> <li>Horario: Lunes 08:00 AM (GMT-4)  </li> <li>Notificaciones: Slack #dependabot-alerts  </li> <li>Pruebas: <pre><code>open-pull-requests-limit: 5\nrebase-strategy: \"disabled\"\n</code></pre></li> </ul>"},{"location":"security/DEPENDENCY-POLICY/#documentacion-relacionada","title":"Documentaci\u00f3n Relacionada","text":"<p>\ud83d\udccc Pol\u00edtica de Dependencias \ud83d\udccc Proceso de Actualizaci\u00f3n </p> <p>Firma: Equipo de Plataforma - MechBot 2.0x \ud83d\udee0\ufe0f \u00daltima actualizaci\u00f3n: 2025-04-05 \ud83d\udd17 Convenci\u00f3n de Commits</p>"},{"location":"security/GUIDELINES/","title":"Documentaci\u00f3n de Seguridad - MechBot 2.0x","text":"<p>Ubicaci\u00f3n: <code>docs/security/GUIDELINES.md</code> Equipo de Ingenier\u00eda - Security Team Versi\u00f3n: 2.0.1 | \u00daltima actualizaci\u00f3n: 2025-04-03  </p>"},{"location":"security/GUIDELINES/#1-gestion-de-secretos-y-credenciales","title":"1. Gesti\u00f3n de Secretos y Credenciales","text":"<p>Archivos clave: - <code>.vault/env.encrypted</code> (Cifrado con Ansible Vault) - <code>kubernetes/secrets/templates/secret-template.yaml</code> </p>"},{"location":"security/GUIDELINES/#recomendaciones","title":"Recomendaciones:","text":"<ol> <li> <p>Nunca almacenar en claro: <pre><code># Mal pr\u00e1ctica (evitar):\nPOSTGRES_PASSWORD=password123  # \u274c\n\n# Buen pr\u00e1ctica:\nPOSTGRES_PASSWORD=${VAULT:db_prod_password}  # \u2705\n</code></pre></p> </li> <li> <p>Rotaci\u00f3n obligatoria: <pre><code># En .env.sample\nJWT_SECRET_ROTATION_INTERVAL=30d  # Rotaci\u00f3n mensual\nDB_CREDENTIALS_ROTATION=15d       # Rotaci\u00f3n quincenal para entornos cr\u00edticos\n</code></pre></p> </li> <li> <p>Herramientas recomendadas:  </p> </li> <li>HashiCorp Vault para gesti\u00f3n centralizada  </li> <li>AWS Secrets Manager para entornos cloud  </li> <li>SOPS para cifrado de archivos (config en <code>.sops.yaml</code>)  </li> </ol>"},{"location":"security/GUIDELINES/#2-configuracion-de-red-y-comunicaciones","title":"2. Configuraci\u00f3n de Red y Comunicaciones","text":"<p>Archivos clave: - <code>deploy/network/security-groups.prod.yaml</code> - <code>src/core/security/tls_config.py</code> </p>"},{"location":"security/GUIDELINES/#recomendaciones_1","title":"Recomendaciones:","text":"Protocolo Puertos Cifrado Requerido CAN Bus - TLS 1.3 + MACsec gRPC 50051 mTLS con ECDSA HTTP/API 443 HSTS + TLS 1.3 <p>Ejemplo de configuraci\u00f3n TLS: <pre><code># En tls_config.py\nCIPHERS = [\n    'TLS_AES_256_GCM_SHA384',\n    'TLS_CHACHA20_POLY1305_SHA256'\n]\n</code></pre></p>"},{"location":"security/GUIDELINES/#3-seguridad-en-contenedores","title":"3. Seguridad en Contenedores","text":"<p>Archivos clave: - <code>dockerfiles/Dockerfile.secure</code> - <code>kubernetes/policies/pod-security-policy.yaml</code> </p>"},{"location":"security/GUIDELINES/#buenas-practicas","title":"Buenas Pr\u00e1cticas:","text":"<ol> <li> <p>Usar usuarios no-root: <pre><code>FROM alpine:3.18\nRUN adduser -D mechbotuser\nUSER mechbotuser  # \u2705\n</code></pre></p> </li> <li> <p>Scan de vulnerabilidades: <pre><code># En CI/CD (publish.yml)\n- name: Scan image\n  uses: aquasecurity/trivy-action@0.9\n  with:\n    image-ref: ${{ steps.meta.outputs.tags }}\n    severity: 'CRITICAL,HIGH'\n</code></pre></p> </li> <li> <p>Pol\u00edticas Kubernetes: <pre><code># En pod-security-policy.yaml\nspec:\n  readOnlyRootFilesystem: true\n  allowPrivilegeEscalation: false\n  capabilities:\n    drop: [\"ALL\"]\n</code></pre></p> </li> </ol>"},{"location":"security/GUIDELINES/#4-hardening-de-bases-de-datos","title":"4. Hardening de Bases de Datos","text":"<p>Archivos clave: - <code>deploy/postgres/postgres-hardening.sql</code> - <code>config/cassandra/security.yaml</code> </p>"},{"location":"security/GUIDELINES/#configuraciones-criticas","title":"Configuraciones Cr\u00edticas:","text":"<pre><code>-- En postgres-hardening.sql\nALTER SYSTEM SET ssl = 'on';\nALTER SYSTEM SET password_encryption = 'scram-sha-256';\nCREATE ROLE mechbot_rw WITH LOGIN PASSWORD '${VAULT_DB_PWD}' NOINHERIT;\n</code></pre> <pre><code># En cassandra/security.yaml\nauthenticator: PasswordAuthenticator\nauthorizer: CassandraAuthorizer\nrole_manager: CassandraRoleManager\n</code></pre>"},{"location":"security/GUIDELINES/#5-monitoreo-de-seguridad","title":"5. Monitoreo de Seguridad","text":"<p>Archivos clave: - <code>monitoring/siem/alerts-rules.yml</code> - <code>deploy/efk/security-dashboard.ndjson</code> </p>"},{"location":"security/GUIDELINES/#alertas-prioritarias","title":"Alertas Prioritarias:","text":"<pre><code># En alerts-rules.yml\n- alert: JWT_Tampering_Attempt\n  expr: rate(jwt_failed_attempts[5m]) &gt; 3\n  labels:\n    severity: critical\n  annotations:\n    summary: \"Posible ataque de fuerza bruta JWT\"\n</code></pre>"},{"location":"security/GUIDELINES/#6-auditoria-y-cumplimiento","title":"6. Auditor\u00eda y Cumplimiento","text":"<p>Archivos clave: - <code>compliance/iso27001-controls.csv</code> - <code>scripts/security/audit.sh</code> </p>"},{"location":"security/GUIDELINES/#checklist-automatizado","title":"Checklist Automatizado:","text":"<pre><code>#!/bin/bash\n# En audit.sh\ncheck_ssl() {\n  openssl s_client -connect $1:443 | grep \"TLSv1.3\"\n}\ncheck_db_encryption() {\n  psql -c \"SHOW ssl;\" | grep \"on\"\n}\n</code></pre>"},{"location":"security/GUIDELINES/#anexo-politicas-de-emergencia","title":"Anexo: Pol\u00edticas de Emergencia","text":"<p>Ubicaci\u00f3n: <code>docs/security/INCIDENT_RESPONSE.md</code> </p> Escenario Acci\u00f3n Inmediata Fuga de credenciales Rotar TODOS los secretos en &lt;1h Ataque DDoS Activar Cloudflare WAF + Scale Up Intrusi\u00f3n DB Aislar cluster + Snapshots forenses <p>Equipo de Seguridad MechBot 2.0x \ud83d\udd12 <code>security@mechbot.tech</code> | \ud83d\udd17 Convenciones de Seguridad </p> <p>Documentaci\u00f3n verificada por: @david-security-lead @maria-compliance-officer</p>"},{"location":"security/INCIDENT_RESPONSE/","title":"INCIDENT RESPONSE","text":"Escenario Acci\u00f3n Inmediata Fuga de credenciales Rotar TODOS los secretos en &lt;1h Ataque DDoS Activar Cloudflare WAF + Scale Up Intrusi\u00f3n DB Aislar cluster + Snapshots forenses"},{"location":"security/SECURITY/","title":"Pol\u00edticas","text":"<p>Here's a comprehensive, professionally structured <code>SECURITY.md</code> policy tailored for MechBot 2.0x:</p> <pre><code># MechBot 2.0x Security Policy\n\n## Supported Versions\n\nThe following versions currently receive security updates:\n\n| Version  | Support Status          | EOL Date    | Critical Support Until |\n|----------|-------------------------|-------------|------------------------|\n| 2.1.x    | :white_check_mark:      | 2026-03-01  | 2026-06-01             |\n| 2.0.x    | :warning: (LTS)         | 2025-12-01  | 2025-12-01             |\n| 1.5.x    | :x:                     | 2025-06-01  | -                      |\n| &lt; 1.5    | :x:                     | 2024-12-01  | -                      |\n\n:white_check_mark: = Full Support  \n:warning: = Critical Fixes Only  \n:x: = Unsupported\n\n## Vulnerability Reporting\n\n### Disclosure Policy\n- **Private disclosure window**: 90 days from initial report\n- **Public disclosure**: After patch availability or 90 days (whichever comes first)\n- **Response SLA**: Initial response within 72 business hours\n\n### Reporting Channels\n1. **Preferred**: security@mechbot.tech (PGP Key [0xAB3F2C1D])\n2. **Fallback**: GitHub Security Advisories (for GitHub-native projects)\n3. **Emergency**: +1-555-MECH-SEC (Security Operations Center)\n\n```pgp\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n[Redacted PGP Key for actual implementation]\n-----END PGP PUBLIC KEY BLOCK-----\n</code></pre>"},{"location":"security/SECURITY/#security-update-process","title":"Security Update Process","text":"<ol> <li>Triage:</li> <li>Classification within 5 business days</li> <li> <p>CVSS scoring using MechBot Scoring Guide</p> </li> <li> <p>Remediation:</p> </li> <li>Critical: Patch within 14 days</li> <li>High: Patch within 30 days</li> <li> <p>Medium: Patch within 90 days</p> </li> <li> <p>Notification:</p> </li> <li>Security bulletin via MechBot Security Advisory (MSA)</li> <li>CVE assignment for qualifying vulnerabilities</li> </ol>"},{"location":"security/SECURITY/#security-advisories","title":"Security Advisories","text":"<p>All advisories are published at: - https://mechbot.tech/security/advisories - GitHub Security Advisories (for open-source components)</p>"},{"location":"security/SECURITY/#secure-development-practices","title":"Secure Development Practices","text":""},{"location":"security/SECURITY/#for-contributors","title":"For Contributors","text":"<ul> <li>Mandatory security training (annual)</li> <li>Static analysis via CodeQL (enforced in CI)</li> <li>Signed commits required (GPG/PGP)</li> </ul>"},{"location":"security/SECURITY/#for-integrators","title":"For Integrators","text":"<ul> <li>API consumers must implement:</li> <li>Request signing (HMAC-SHA256)</li> <li>TLS 1.3+ with PFS ciphers</li> <li>Rate limiting (1000 req/min default)</li> </ul>"},{"location":"security/SECURITY/#vulnerability-types-of-interest","title":"Vulnerability Types of Interest","text":"<p>We prioritize reports involving: - Remote code execution - Authentication bypass - Data leakage in CAN bus protocol - Cryptographic weaknesses - Supply chain compromises</p>"},{"location":"security/SECURITY/#exclusions","title":"Exclusions","text":"<ul> <li>UI/UX bugs without security impact</li> <li>Theoretical attacks without PoC</li> <li>Issues already reported via other channels</li> </ul>"},{"location":"security/SECURITY/#security-acknowledgments","title":"Security Acknowledgments","text":"<p>See our Hall of Fame for researchers who've contributed to MechBot's security.</p> <p>Policy Version: 2.1.0 Last Revised: 2025-04-03 Approved by: MechBot Security Council ```</p> <p>Key improvements over the template:</p> <ol> <li>Detailed Version Support:</li> <li>Added EOL dates and critical support periods</li> <li> <p>Visual indicators for support status</p> </li> <li> <p>Structured Disclosure Process:</p> </li> <li>Defined SLAs and communication channels</li> <li> <p>Included PGP key placeholder</p> </li> <li> <p>MechBot-Specific Requirements:</p> </li> <li>Added CAN bus security considerations</li> <li> <p>API security requirements for integrators</p> </li> <li> <p>Transparency:</p> </li> <li>Clear remediation timelines</li> <li> <p>Defined publication channels</p> </li> <li> <p>Compliance Ready:</p> </li> <li>Meets requirements for ISO 27001 and SOC 2 reporting</li> <li>Includes proper versioning and approval trail</li> </ol> <p>For implementation: 1. Replace placeholder PGP key with your actual security team key 2. Update URLs to your actual security portal 3. Set up the security@mechbot.tech email with proper forwarding 4. Configure GitHub Security Advisories for the repository</p>"},{"location":"security/UPDATE-PROCESS/","title":"Configuraci\u00f3n Oficial de Dependabot - MechBot 2.0x","text":""},{"location":"security/UPDATE-PROCESS/#nombre-del-documento","title":"Nombre del Documento","text":"<p>T\u00edtulo: \"Pol\u00edtica de Gesti\u00f3n de Dependencias Automatizada\" Nombre del archivo: <code>dependabot.yml</code> Ubicaci\u00f3n en el proyecto: <code>.github/dependabot.yml</code></p>"},{"location":"security/UPDATE-PROCESS/#estructura-del-proyecto","title":"Estructura del Proyecto","text":"<pre><code>mechbot-2x/\n\u251c\u2500\u2500 .github/\n\u2502   \u251c\u2500\u2500 workflows/\n\u2502   \u251c\u2500\u2500 dependabot.yml       # Este archivo (ubicaci\u00f3n principal)\n\u2502   \u2514\u2500\u2500 SECURITY.md\n\u251c\u2500\u2500 docs/\n\u2502   \u2514\u2500\u2500 security/\n\u2502       \u2514\u2500\u2500 DEPENDENCY-POLICY.md  # Documentaci\u00f3n relacionada\n</code></pre>"},{"location":"security/UPDATE-PROCESS/#caracteristicas-clave","title":"Caracter\u00edsticas Clave","text":"<ol> <li>Alcance: Control centralizado de actualizaciones para:</li> <li>Paquetes NPM/Node.js</li> <li>Dependencias Python (pip)</li> <li>Im\u00e1genes Docker</li> <li> <p>Acciones de GitHub</p> </li> <li> <p>Flujo de Trabajo:</p> </li> <li>Ejecuci\u00f3n semanal/mensual programada</li> <li>Notificaciones al equipo core</li> <li> <p>Integraci\u00f3n con revisi\u00f3n de seguridad</p> </li> <li> <p>Documentaci\u00f3n Asociada:</p> </li> <li><code>DEPENDENCY-POLICY.md</code>: Reglas de actualizaci\u00f3n</li> <li><code>UPDATE-PROCESS.md</code>: Procedimiento de validaci\u00f3n</li> </ol> <p>Equipo de Ingenier\u00eda MechBot \ud83d\udccd Este archivo debe mantenerse en la ruta exacta <code>.github/dependabot.yml</code> para funcionamiento correcto del sistema de GitHub. \ud83d\udcc5 \u00daltima revisi\u00f3n de pol\u00edticas: Abril 2025 (v2.1.0)</p>"}]}
```markdown
# API Reference - MechBot 2.0x

## üîê Autenticaci√≥n
### `POST /auth/token`
Genera un JWT para acceso a los endpoints protegidos.

**Request:**
```json
{
  "client_id": "mechbot_mobile_app",
  "client_secret": "tu_secreto_registrado"
}
```

**Response (200 OK):**
```json
{
  "access_token": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9...",
  "expires_in": 3600,
  "token_type": "Bearer"
}
```

> üîí Requiere: `client_credentials` OAuth2 flow

---

## üöó Diagn√≥stico Vehicular
### `POST /v2/diagnosis`
Analiza datos OBD-II y telemetr√≠a en tiempo real.

**Headers:**
```
Authorization: Bearer {token}
Content-Type: application/json
```

**Request:**
```json
{
  "vin": "1HGCM82633A123456",
  "obd_codes": ["P0300", "P0172"],
  "telemetry": {
    "rpm": 3200,
    "engine_temp": 92,
    "fuel_pressure": 3.4
  }
}
```

**Response (202 Accepted):**
```json
{
  "diagnosis_id": "diag_abc123",
  "estimated_time": 15,
  "status_url": "/diagnosis/status/diag_abc123"
}
```

**Errores:**
- `401 Unauthorized`: Token inv√°lido
- `429 Too Many Requests`: L√≠mite de 10 req/minuto

---

## üì° Streaming de Telemetr√≠a
### `GET /telemetry/stream`
Conexi√≥n WebSocket para datos en tiempo real.

**Mensaje Entrante (Client):**
```json
{
  "vin": "1HGCM82633A123456",
  "subscribe_to": ["rpm", "coolant_temp"]
}
```

**Mensaje Saliente (Server):**
```json
{
  "timestamp": "2023-11-15T14:23:45Z",
  "values": {
    "rpm": 3200,
    "coolant_temp": 88.5
  }
}
```

---

## üõ†Ô∏è Integraci√≥n con Talleres
### `GET /workshops/nearby`
Busca talleres certificados en radio de 10km.

**Query Params:**
```text
?lat=19.4326&lng=-99.1332&services=engine,electric
```

**Response (200 OK):**
```json
{
  "workshops": [
    {
      "id": "taller_xyz",
      "name": "Taller Premium CDMX",
      "distance": 2.5,
      "services": ["engine", "diagnostics"],
      "rating": 4.8
    }
  ]
}
```

---

## üß† IA/ML Endpoints
### `POST /ml/predict`
Endpoint para inferencia de modelos (uso interno).

**Headers:**
```
X-API-KEY: {internal_key}
```

**Request:**
```json
{
  "model": "xgb_fault_v3",
  "input_data": {
    "sensor_data": [...],
    "error_codes": [...]
  }
}
```

**Response (200 OK):**
```json
{
  "prediction": "faulty_injector",
  "confidence": 0.934,
  "components_affected": ["fuel_system"]
}
```

> ‚ö†Ô∏è Solo accesible desde VPC

---

## üìä M√©tricas de Rendimiento
| Endpoint | Latencia p95 | TPS M√°ximo |
|----------|-------------|------------|
| /auth/token | 120ms | 500 |
| /v2/diagnosis | 1.4s | 200 |
| /telemetry/stream | 50ms | 1,000 |

---

## üîó Enlaces √ötiles
- [Postman Collection](https://api.mechbot.tech/postman)
- [OpenAPI Spec](https://api.mechbot.tech/swagger)
- [Errores Comunes](/docs/API_ERRORS.md)

**Equipo T√©cnico MechBot 2.0x**  
*√öltima actualizaci√≥n: 2023-11-15*  
[![API Status](https://img.shields.io/badge/status-production-brightgreen)](https://status.mechbot.tech)
``` 

### Caracter√≠sticas Clave:
1. **Autenticaci√≥n JWT** con rotaci√≥n autom√°tica de claves
2. **WebSocket** para telemetr√≠a en tiempo real
3. **Versionado API** (`/v2/` para endpoints nuevos)
4. **Documentaci√≥n integrable** con Swagger/Postman

¬øNecesitas un endpoint adicional? Abre un *issue* en nuestro [repo GitHub](https://github.com/mechbot-2x/api-specs).

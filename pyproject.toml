# =============================================
# CONFIGURACIÓN DEL PROYECTO - MECHBOT CORE 2.0
# =============================================
[project]
name = "mechbot-core"
version = "2.0.1"
description = """
Plataforma de diagnóstico automotriz inteligente que combina:
- Análisis predictivo mediante IA
- Integración con sistemas vehiculares OBD-II/CAN
- Gestión de talleres en tiempo real
"""
authors = [
    {name = "Equipo de Ingeniería MechBot", email = "core-dev@mechbot.tech"},
    {name = "Departamento de IA", email = "ai-team@mechbot.tech"},
    {name = "Integración Vehicular", email = "firmware@mechbot.tech"}
]
license = {text = "Apache-2.0"}
requires-python = ">=3.10"
readme = "README.md"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Automotive Technicians",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.10"
]

# ========================
# ARQUITECTURA DEL SISTEMA
# ========================
[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

# =================================
# DEPENDENCIAS DEL NÚCLEO PRINCIPAL
# =================================
dependencies = [
    # Capa de API y Comunicaciones
    "fastapi==0.95.2",          # Framework API web (ASGI)
    "uvicorn[standard]==0.22.0", # Servidor ASGI optimizado
    "starlette==0.27.0",        # Componentes ASGI base

    # Seguridad y Autenticación
    "python-jose[cryptography]==3.3.0",  # Implementación JWT
    "passlib[bcrypt,argon2]==1.7.4",     # Hashing avanzado
    "cryptography==41.0.3",     # Cifrado AES-256/GCM

    # Manejo de Datos
    "pydantic[email]==1.10.7",  # Validación de datos
    "orjson==3.9.5",            # Serialización JSON ultra-rápida
    "python-dotenv==1.0.0",     # Gestión de entornos

    # Concurrencia y Paralelismo
    "anyio==3.6.2",             # Abstracción asíncrona
    "concurrent-log-handler==0.9.24", # Logging thread-safe

    # Monitorización del Sistema
    "loguru==0.7.0",            # Logging estructurado
    "psutil==5.9.5",            # Monitoreo de recursos
]

# ====================================
# MÓDULOS ESPECIALIZADOS (OPTIONAL-DEPS)
# ====================================
[project.optional-dependencies]

# ------------------------------------
# Módulo de Inteligencia Artificial
# ------------------------------------
ia = [
    # Runtime de Inferencia
    "onnxruntime-gpu==1.14.1",  # Aceleración CUDA

    # Frameworks de ML
    "xgboost==1.7.5",           # Para diagnóstico predictivo
    "lightgbm==3.3.5",          # Modelos eficientes

    # Procesamiento de Señales
    "scipy==1.10.1",            # Análisis de vibraciones
    "scikit-learn==1.5.1",      # Pre-procesamiento

    # Visión por Computador
    "opencv-python==4.7.0.72",  # Análisis de imágenes
    "Pillow==9.5.0",            # Procesamiento de imágenes

    # NLP para informes
    "transformers[torch]==4.30.2",
    "spacy==3.5.3"
]

# ------------------------------------
# =============================================
# CONFIGURACIÓN DEL PROYECTO - MECHBOT CORE 2.0
# =============================================
[project]
name = "mechbot-core"
version = "2.0.1"
description = """
Plataforma de diagnóstico automotriz inteligente que combina:
- Análisis predictivo mediante IA
- Integración con sistemas vehiculares OBD-II/CAN
- Gestión de talleres en tiempo real
"""
authors = [
    {name = "Equipo de Ingeniería MechBot", email = "core-dev@mechbot.tech"},
    {name = "Departamento de IA", email = "ai-team@mechbot.tech"},
    {name = "Integración Vehicular", email = "firmware@mechbot.tech"}
]
license = {text = "Apache-2.0"}
requires-python = ">=3.10"
readme = "README.md"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Automotive Technicians",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.10"
]

# ========================
# ARQUITECTURA DEL SISTEMA
# ========================
[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

# =================================
# DEPENDENCIAS DEL NÚCLEO PRINCIPAL
# =================================
dependencies = [
    # Capa de API y Comunicaciones
    "fastapi==0.95.2",          # Framework API web (ASGI)
    "uvicorn[standard]==0.22.0", # Servidor ASGI optimizado
    "starlette==0.27.0",        # Componentes ASGI base

    # Seguridad y Autenticación
    "python-jose[cryptography]==3.3.0",  # Implementación JWT
    "passlib[bcrypt,argon2]==1.7.4",     # Hashing avanzado
    "cryptography==41.0.3",     # Cifrado AES-256/GCM

    # Manejo de Datos
    "pydantic[email]==1.10.7",  # Validación de datos
    "orjson==3.9.5",            # Serialización JSON ultra-rápida
    "python-dotenv==1.0.0",     # Gestión de entornos

    # Concurrencia y Paralelismo
    "anyio==3.6.2",             # Abstracción asíncrona
    "concurrent-log-handler==0.9.24", # Logging thread-safe

    # Monitorización del Sistema
    "loguru==0.7.0",            # Logging estructurado
    "psutil==5.9.5",            # Monitoreo de recursos
]

# ====================================
# MÓDULOS ESPECIALIZADOS (OPTIONAL-DEPS)
# ====================================
[project.optional-dependencies]

# ------------------------------------
# Módulo de Inteligencia Artificial
# ------------------------------------
ia = [
    # Runtime de Inferencia
    "onnxruntime-gpu==1.14.1",  # Aceleración CUDA

    # Frameworks de ML
    "xgboost==1.7.5",           # Para diagnóstico predictivo
    "lightgbm==3.3.5",          # Modelos eficientes

    # Procesamiento de Señales
    "scipy==1.10.1",            # Análisis de vibraciones
    "scikit-learn==1.5.1",      # Pre-procesamiento

    # Visión por Computador
    "opencv-python==4.7.0.72",  # Análisis de imágenes
    "Pillow==9.5.0",            # Procesamiento de imágenes

    # NLP para informes
    "transformers[torch]==4.30.2",
    "spacy==3.5.3"
]

# ------------------------------------
# Módulo de Integración Vehicular
# ------------------------------------
obd = [
    "python-obd==0.7.1",        # Conexión OBD-II
    "canmatrix==0.9.5",         # Parsing DBC/CAN
    "cantools==37.2.0",         # Codificación CAN
    "pyserial==3.5"            # Comunicación serial
]

# ------------------------------------
# Módulo de Gestión de Talleres
# ------------------------------------
taller = [
    "grpcio==1.54.3",           # Comunicación gRPC
    "grpcio-tools==1.54.2",     # Generación de stubs
    "protobuf==4.23.2",         # Serialización Protocol Buffers
    "googleapis-common-protos==1.59.1" # Protos estándar
]

# ====================================
# CONFIGURACIÓN DE HERRAMIENTAS DE DESARROLLO
# ====================================
[tool.pytest.ini_options]
testpaths = [
    "tests/unit",
    "tests/integration",
    "tests/validation"
]
asyncio_mode = "auto"
addopts = """
-v
--cov=src
--cov-report=term
--cov-report=xml
--junitxml=test-results.xml
"""
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::ResourceWarning"
]
log_level = "INFO"
log_cli = true

[tool.mypy]
python_version = "3.10"
strict = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
check_untyped_defs = true

[tool.ruff]
# Configuración de Análisis Estático
line-length = 120

[tool.ruff.lint]
select = [
    "E",   # Pycodestyle Errors
    "W",   # Pycodestyle Warnings
    "F",   # PyFlakes
    "I",   # Isort
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "A",   # flake8-builtins
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "RUF"  # Ruff-specific
]
ignore = [
    "D203",  # Whitespace before class docstring
    "D212",  # Multi-line docstring summary
    "B008",  # Late-binding closures
    "E501"   # Line too long (manejado por black)
]
unfixable = ["T20", "F401"]

target-version = "py310"

# Excluir archivos de protobuf generados
exclude = [
    "**/_pb2*.py",
    "**/generated/**"
]


[tool.black]
line-length = 120
target-version = ['py310']
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
  | protobufs
)/

[tool.isort]
profile = "black"
line_length = 120
known_first_party = ["mechbot"]
sections = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER"
]

# ====================================
# CONFIGURACIÓN DE EMPAQUETADO
# ====================================
[tool.setuptools]
package-dir = {"" = "src"}
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]
include = ["mechbot*"]
exclude = [
    "tests*",
    "experimental*",
    "legacy*"
]

[tool.setuptools.dynamic]
version = {attr = "mechbot.__version__"}
